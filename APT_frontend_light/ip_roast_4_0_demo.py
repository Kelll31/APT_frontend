#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
IP ROAST 4.0 - –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ
–î–µ–º–æ –≤–µ—Ä—Å–∏—è —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –∏ 25 –º–æ–¥—É–ª—è–º–∏

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–∏ 4.0:
- –°–∏–≥–Ω–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤
- –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∞—Ç–∞–∫
- –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
- 25 —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∞—Ç–∞–∫
"""

import asyncio
import json
import logging
import time
from datetime import datetime
from typing import Dict, List, Optional, Any
import sqlite3
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('ip_roast_4_0.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('IP_ROAST_4.0')

class –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ú–æ–¥—É–ª—å:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""

    def __init__(self, –∏–º—è: str, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: int = 5):
        self.–∏–º—è = –∏–º—è
        self.–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç = –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        self.—Å—Ç–∞—Ç—É—Å = "–≥–æ—Ç–æ–≤"
        self.—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã = {}

    async def –≤—ã–ø–æ–ª–Ω–∏—Ç—å(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> Dict:
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–æ–¥—É–ª—è"""
        logger.info(f"üîß –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–æ–¥—É–ª—å: {self.–∏–º—è}")
        await asyncio.sleep(0.1)  # –∏–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
        return {"—Å—Ç–∞—Ç—É—Å": "–≤—ã–ø–æ–ª–Ω–µ–Ω–æ", "–º–æ–¥—É–ª—å": self.–∏–º—è}

class –°–∫–∞–Ω–µ—Ä–°–∏–≥–Ω–∞—Ç—É—Ä(–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ú–æ–¥—É–ª—å):
    """–ú–æ–¥—É–ª—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏–≥–Ω–∞—Ç—É—Ä —Å–µ—Ä–≤–∏—Å–æ–≤"""

    def __init__(self):
        super().__init__("–°–∫–∞–Ω–µ—Ä —Å–∏–≥–Ω–∞—Ç—É—Ä", 10)
        self.–±–∞–∑–∞_—Å–∏–≥–Ω–∞—Ç—É—Ä = self._–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å_–±–∞–∑—É()

    def _–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å_–±–∞–∑—É(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã —Å–∏–≥–Ω–∞—Ç—É—Ä"""
        return {
            80: {"—Å–µ—Ä–≤–∏—Å": "HTTP", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["Server: Apache", "Server: nginx"]},
            443: {"—Å–µ—Ä–≤–∏—Å": "HTTPS", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["SSL/TLS"]},
            22: {"—Å–µ—Ä–≤–∏—Å": "SSH", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["SSH-2.0-OpenSSH"]},
            21: {"—Å–µ—Ä–≤–∏—Å": "FTP", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["220 FTP"]},
            3306: {"—Å–µ—Ä–≤–∏—Å": "MySQL", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["mysql_native_password"]},
            5432: {"—Å–µ—Ä–≤–∏—Å": "PostgreSQL", "—Å–∏–≥–Ω–∞—Ç—É—Ä—ã": ["PostgreSQL"]},
        }

    async def –≤—ã–ø–æ–ª–Ω–∏—Ç—å(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> Dict:
        """–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞—Ç—É—Ä"""
        —Ü–µ–ª—å = –¥–∞–Ω–Ω—ã–µ.get("—Ü–µ–ª—å", "127.0.0.1")
        –ø–æ—Ä—Ç—ã = –¥–∞–Ω–Ω—ã–µ.get("–ø–æ—Ä—Ç—ã", [21, 22, 80, 443, 3306, 5432])

        logger.info(f"üîç –°–∫–∞–Ω–∏—Ä—É–µ–º {—Ü–µ–ª—å}, –ø–æ—Ä—Ç–æ–≤: {len(–ø–æ—Ä—Ç—ã)}")

        –Ω–∞–π–¥–µ–Ω–Ω—ã–µ_—Å–µ—Ä–≤–∏—Å—ã = {}
        –æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã = []

        # –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
        for –ø–æ—Ä—Ç in –ø–æ—Ä—Ç—ã:
            if –ø–æ—Ä—Ç in self.–±–∞–∑–∞_—Å–∏–≥–Ω–∞—Ç—É—Ä:
                # –ò–º–∏—Ç–∏—Ä—É–µ–º —á—Ç–æ –ø–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 30%
                import random
                if random.random() < 0.3:
                    –æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã.append(–ø–æ—Ä—Ç)
                    –Ω–∞–π–¥–µ–Ω–Ω—ã–µ_—Å–µ—Ä–≤–∏—Å—ã[–ø–æ—Ä—Ç] = self.–±–∞–∑–∞_—Å–∏–≥–Ω–∞—Ç—É—Ä[–ø–æ—Ä—Ç]["—Å–µ—Ä–≤–∏—Å"]
                    logger.info(f"  ‚úÖ –ü–æ—Ä—Ç {–ø–æ—Ä—Ç}: {self.–±–∞–∑–∞_—Å–∏–≥–Ω–∞—Ç—É—Ä[–ø–æ—Ä—Ç]['—Å–µ—Ä–≤–∏—Å']}")

        return {
            "—Ü–µ–ª—å": —Ü–µ–ª—å,
            "–æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã": –æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã,
            "—Å–µ—Ä–≤–∏—Å—ã": –Ω–∞–π–¥–µ–Ω–Ω—ã–µ_—Å–µ—Ä–≤–∏—Å—ã,
            "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–Ω–∞–π–¥–µ–Ω–Ω—ã—Ö": len(–æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã),
            "—Å—Ç–∞—Ç—É—Å": "–∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        }

class –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä(–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ú–æ–¥—É–ª—å):
    """–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –≤—ã–±–æ—Ä–∞ –∞—Ç–∞–∫"""

    def __init__(self):
        super().__init__("–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä", 9)
        self.–º–æ–¥—É–ª–∏_–∞—Ç–∞–∫ = self._–∑–∞–≥—Ä—É–∑–∏—Ç—å_–º–æ–¥—É–ª–∏_–∞—Ç–∞–∫()

    def _–∑–∞–≥—Ä—É–∑–∏—Ç—å_–º–æ–¥—É–ª–∏_–∞—Ç–∞–∫(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª—è—Ö –∞—Ç–∞–∫"""
        return {
            "web_attack": {
                "–ø—Ä–∏–º–µ–Ω–∏–º–æ_–∫": ["HTTP", "HTTPS"],
                "–∞—Ç–∞–∫–∏": ["SQL Injection", "XSS", "CSRF"],
                "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 8
            },
            "ssh_attack": {
                "–ø—Ä–∏–º–µ–Ω–∏–º–æ_–∫": ["SSH"],
                "–∞—Ç–∞–∫–∏": ["Brute Force", "Key Scanning"],
                "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 6
            },
            "db_attack": {
                "–ø—Ä–∏–º–µ–Ω–∏–º–æ_–∫": ["MySQL", "PostgreSQL"],
                "–∞—Ç–∞–∫–∏": ["SQL Injection", "Privilege Escalation"],
                "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 9
            },
            "ftp_attack": {
                "–ø—Ä–∏–º–µ–Ω–∏–º–æ_–∫": ["FTP"],
                "–∞—Ç–∞–∫–∏": ["Anonymous Login", "Buffer Overflow"],
                "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 5
            }
        }

    async def –≤—ã–ø–æ–ª–Ω–∏—Ç—å(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> Dict:
        """–ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –≤—ã–±–æ—Ä –∞—Ç–∞–∫"""
        —Å–µ—Ä–≤–∏—Å—ã = –¥–∞–Ω–Ω—ã–µ.get("—Å–µ—Ä–≤–∏—Å—ã", {})

        logger.info("üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–µ–ª—å –∏ –≤—ã–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∞—Ç–∞–∫–∏...")

        —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏ = []
        –ø–ª–∞–Ω_–∞—Ç–∞–∫–∏ = {}

        for –ø–æ—Ä—Ç, —Å–µ—Ä–≤–∏—Å in —Å–µ—Ä–≤–∏—Å—ã.items():
            for –º–æ–¥—É–ª—å_id, –º–æ–¥—É–ª—å_–∏–Ω—Ñ–æ in self.–º–æ–¥—É–ª–∏_–∞—Ç–∞–∫.items():
                if —Å–µ—Ä–≤–∏—Å in –º–æ–¥—É–ª—å_–∏–Ω—Ñ–æ["–ø—Ä–∏–º–µ–Ω–∏–º–æ_–∫"]:
                    —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏.append({
                        "–º–æ–¥—É–ª—å": –º–æ–¥—É–ª—å_id,
                        "—Ü–µ–ª—å_–ø–æ—Ä—Ç": –ø–æ—Ä—Ç,
                        "—Ü–µ–ª—å_—Å–µ—Ä–≤–∏—Å": —Å–µ—Ä–≤–∏—Å,
                        "–∞—Ç–∞–∫–∏": –º–æ–¥—É–ª—å_–∏–Ω—Ñ–æ["–∞—Ç–∞–∫–∏"],
                        "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": –º–æ–¥—É–ª—å_–∏–Ω—Ñ–æ["—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"]
                    })
                    logger.info(f"  üéØ {–º–æ–¥—É–ª—å_id} -> {—Å–µ—Ä–≤–∏—Å} (–ø–æ—Ä—Ç {–ø–æ—Ä—Ç})")

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏.sort(key=lambda x: x["—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"], reverse=True)

        return {
            "—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏": —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏,
            "–æ–±—â–∏–π_—Ä–µ–π—Ç–∏–Ω–≥_—Ä–∏—Å–∫–∞": len(—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏) * 1.5,
            "—Å—Ç–∞—Ç—É—Å": "–∞–Ω–∞–ª–∏–∑_–∑–∞–≤–µ—Ä—à–µ–Ω"
        }

class –ú–æ–¥—É–ª—å–í–µ–±–ê—Ç–∞–∫(–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ú–æ–¥—É–ª—å):
    """–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –∞—Ç–∞–∫ –Ω–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    def __init__(self):
        super().__init__("–ú–æ–¥—É–ª—å –≤–µ–±-–∞—Ç–∞–∫", 8)

    async def –≤—ã–ø–æ–ª–Ω–∏—Ç—å(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> Dict:
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–µ–±-–∞—Ç–∞–∫"""
        logger.info("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–¥—É–ª—å –≤–µ–±-–∞—Ç–∞–∫...")

        —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫ = {
            "sql_injection": {"–Ω–∞–π–¥–µ–Ω–æ": 2, "–∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å": "–≤—ã—Å–æ–∫–∞—è"},
            "xss": {"–Ω–∞–π–¥–µ–Ω–æ": 1, "–∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å": "—Å—Ä–µ–¥–Ω—è—è"},
            "csrf": {"–Ω–∞–π–¥–µ–Ω–æ": 0, "–∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å": "–Ω–∏–∑–∫–∞—è"},
            "directory_traversal": {"–Ω–∞–π–¥–µ–Ω–æ": 1, "–∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å": "—Å—Ä–µ–¥–Ω—è—è"}
        }

        for –∞—Ç–∞–∫–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç in —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫.items():
            if —Ä–µ–∑—É–ª—å—Ç–∞—Ç["–Ω–∞–π–¥–µ–Ω–æ"] > 0:
                logger.warning(f"  ‚ö†Ô∏è  {–∞—Ç–∞–∫–∞}: –Ω–∞–π–¥–µ–Ω–æ {—Ä–µ–∑—É–ª—å—Ç–∞—Ç['–Ω–∞–π–¥–µ–Ω–æ']} —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π")

        return {"—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫": —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫, "—Å—Ç–∞—Ç—É—Å": "–∞—Ç–∞–∫–∏_–≤—ã–ø–æ–ª–Ω–µ–Ω—ã"}

class –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–û—Ç—á–µ—Ç–æ–≤(–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ú–æ–¥—É–ª—å):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤"""

    def __init__(self):
        super().__init__("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤", 1)

    async def –≤—ã–ø–æ–ª–Ω–∏—Ç—å(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> Dict:
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"""
        logger.info("üìã –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏...")

        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        –∏–º—è_—Ñ–∞–π–ª–∞ = f"ip_roast_report_{timestamp}.html"

        –æ—Ç—á–µ—Ç_html = self._—Å–æ–∑–¥–∞—Ç—å_html_–æ—Ç—á–µ—Ç(–¥–∞–Ω–Ω—ã–µ)

        with open(–∏–º—è_—Ñ–∞–π–ª–∞, 'w', encoding='utf-8') as f:
            f.write(–æ—Ç—á–µ—Ç_html)

        logger.info(f"üìÑ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {–∏–º—è_—Ñ–∞–π–ª–∞}")

        return {"—Ñ–∞–π–ª_–æ—Ç—á–µ—Ç–∞": –∏–º—è_—Ñ–∞–π–ª–∞, "—Å—Ç–∞—Ç—É—Å": "–æ—Ç—á–µ—Ç_—Å–æ–∑–¥–∞–Ω"}

    def _—Å–æ–∑–¥–∞—Ç—å_html_–æ—Ç—á–µ—Ç(self, –¥–∞–Ω–Ω—ã–µ: Dict) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ HTML –æ—Ç—á–µ—Ç–∞"""
        return f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>IP ROAST 4.0 - –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 20px; }}
        .header {{ background: #2c3e50; color: white; padding: 20px; border-radius: 5px; }}
        .section {{ margin: 20px 0; padding: 15px; border-left: 4px solid #3498db; }}
        .vulnerability {{ background: #ffebee; padding: 10px; margin: 5px 0; }}
        .success {{ color: #27ae60; }}
        .warning {{ color: #f39c12; }}
        .error {{ color: #e74c3c; }}
    </style>
</head>
<body>
    <div class="header">
        <h1>üöÄ IP ROAST 4.0 - –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</h1>
        <p>–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
    </div>

    <div class="section">
        <h2>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
        <p>–¶–µ–ª—å: {–¥–∞–Ω–Ω—ã–µ.get('—Ü–µ–ª—å', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}</p>
        <p>–ù–∞–π–¥–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤: {len(–¥–∞–Ω–Ω—ã–µ.get('–æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã', []))}</p>
        <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: {len(–¥–∞–Ω–Ω—ã–µ.get('—Å–µ—Ä–≤–∏—Å—ã', {}))}</p>
    </div>

    <div class="section">
        <h2>üõ°Ô∏è –û —Å–∏—Å—Ç–µ–º–µ</h2>
        <p>–û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π IP ROAST 4.0 - –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π 
        –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º.</p>
    </div>
</body>
</html>
        """

class –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–ú–æ–¥—É–ª–µ–π:
    """–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏ –∞—Ç–∞–∫"""

    def __init__(self):
        self.–¥–æ—Å—Ç—É–ø–Ω—ã–µ_–º–æ–¥—É–ª–∏ = {
            "1_signature_scanner": –°–∫–∞–Ω–µ—Ä–°–∏–≥–Ω–∞—Ç—É—Ä,
            "4_decision_engine": –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä,
            "7_web_attack_module": –ú–æ–¥—É–ª—å–í–µ–±–ê—Ç–∞–∫,
            "21_report_generator": –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–û—Ç—á–µ—Ç–æ–≤,
        }
        self.–∞–∫—Ç–∏–≤–Ω—ã–µ_–º–æ–¥—É–ª–∏ = {}
        logger.info("üèóÔ∏è  –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–æ–¥—É–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def —Å–æ–∑–¥–∞—Ç—å_–º–æ–¥—É–ª—å(self, —Ç–∏–ø_–º–æ–¥—É–ª—è: str):
        """–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –º–æ–¥—É–ª—è"""
        if —Ç–∏–ø_–º–æ–¥—É–ª—è in self.–¥–æ—Å—Ç—É–ø–Ω—ã–µ_–º–æ–¥—É–ª–∏:
            –º–æ–¥—É–ª—å = self.–¥–æ—Å—Ç—É–ø–Ω—ã–µ_–º–æ–¥—É–ª–∏[—Ç–∏–ø_–º–æ–¥—É–ª—è]()
            self.–∞–∫—Ç–∏–≤–Ω—ã–µ_–º–æ–¥—É–ª–∏[—Ç–∏–ø_–º–æ–¥—É–ª—è] = –º–æ–¥—É–ª—å
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –º–æ–¥—É–ª—å: {–º–æ–¥—É–ª—å.–∏–º—è}")
            return –º–æ–¥—É–ª—å
        else:
            logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –º–æ–¥—É–ª—è: {—Ç–∏–ø_–º–æ–¥—É–ª—è}")
            return None

    def –ø–æ–ª—É—á–∏—Ç—å_–º–æ–¥—É–ª—å(self, —Ç–∏–ø_–º–æ–¥—É–ª—è: str):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–æ–¥—É–ª—è"""
        return self.–∞–∫—Ç–∏–≤–Ω—ã–µ_–º–æ–¥—É–ª–∏.get(—Ç–∏–ø_–º–æ–¥—É–ª—è)

class –ì–ª–∞–≤–Ω–∞—è–°–∏—Å—Ç–µ–º–∞:
    """–ì–ª–∞–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ IP ROAST 4.0"""

    def __init__(self):
        self.–≤–µ—Ä—Å–∏—è = "4.0.0"
        self.–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä = –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–ú–æ–¥—É–ª–µ–π()
        self.–∏—Å—Ç–æ—Ä–∏—è_–∞—Ç–∞–∫ = []

        logger.info(f"üöÄ IP ROAST {self.–≤–µ—Ä—Å–∏—è} –∑–∞–ø—É—â–µ–Ω!")
        self._–ø–æ–∫–∞–∑–∞—Ç—å_–±–∞–Ω–Ω–µ—Ä()

    def _–ø–æ–∫–∞–∑–∞—Ç—å_–±–∞–Ω–Ω–µ—Ä(self):
        """–ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞"""
        –±–∞–Ω–Ω–µ—Ä = f"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                     üöÄ IP ROAST 4.0 üöÄ                      ‚ïë
‚ïë              –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ–Ω—Ç–µ—Å—Ç–∏–Ω–≥–∞             ‚ïë
‚ïë                                                              ‚ïë
‚ïë  üîπ –°–∏–≥–Ω–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤                             ‚ïë
‚ïë  üîπ 25 —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π                           ‚ïë
‚ïë  üîπ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∞—Ç–∞–∫                             ‚ïë
‚ïë  üîπ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ                                 ‚ïë
‚ïë  üîπ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤                                   ‚ïë
‚ïë                                                              ‚ïë
‚ïë  –í–µ—Ä—Å–∏—è: {self.–≤–µ—Ä—Å–∏—è} | –ú–æ–¥—É–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ: 25                     ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        """
        print(–±–∞–Ω–Ω–µ—Ä)

    async def –∑–∞–ø—É—Å—Ç–∏—Ç—å_–ø–æ–ª–Ω–æ–µ_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ(self, —Ü–µ–ª—å: str, –ø–æ—Ä—Ç—ã: List[int] = None):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        logger.info(f"üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–∏: {—Ü–µ–ª—å}")

        # –≠—Ç–∞–ø 1: –°–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        —Å–∫–∞–Ω–µ—Ä = self.–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.—Å–æ–∑–¥–∞—Ç—å_–º–æ–¥—É–ª—å("1_signature_scanner")
        —Ä–µ–∑—É–ª—å—Ç–∞—Ç_—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è = await —Å–∫–∞–Ω–µ—Ä.–≤—ã–ø–æ–ª–Ω–∏—Ç—å({
            "—Ü–µ–ª—å": —Ü–µ–ª—å,
            "–ø–æ—Ä—Ç—ã": –ø–æ—Ä—Ç—ã or [21, 22, 80, 443, 3306, 5432, 8080]
        })

        if not —Ä–µ–∑—É–ª—å—Ç–∞—Ç_—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.get("–æ—Ç–∫—Ä—ã—Ç—ã–µ_–ø–æ—Ä—Ç—ã"):
            logger.warning("‚ö†Ô∏è  –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return None

        # –≠—Ç–∞–ø 2: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä = self.–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.—Å–æ–∑–¥–∞—Ç—å_–º–æ–¥—É–ª—å("4_decision_engine")
        –ø–ª–∞–Ω_–∞—Ç–∞–∫–∏ = await –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä.–≤—ã–ø–æ–ª–Ω–∏—Ç—å(—Ä–µ–∑—É–ª—å—Ç–∞—Ç_—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)

        # –≠—Ç–∞–ø 3: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Ç–∞–∫
        —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫ = {}
        for –∞—Ç–∞–∫–∞ in –ø–ª–∞–Ω_–∞—Ç–∞–∫–∏.get("—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ_–∞—Ç–∞–∫–∏", []):
            if –∞—Ç–∞–∫–∞["–º–æ–¥—É–ª—å"] == "web_attack":
                –º–æ–¥—É–ª—å_–∞—Ç–∞–∫–∏ = self.–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.—Å–æ–∑–¥–∞—Ç—å_–º–æ–¥—É–ª—å("7_web_attack_module")
                —Ä–µ–∑—É–ª—å—Ç–∞—Ç = await –º–æ–¥—É–ª—å_–∞—Ç–∞–∫–∏.–≤—ã–ø–æ–ª–Ω–∏—Ç—å(–∞—Ç–∞–∫–∞)
                —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫[–∞—Ç–∞–∫–∞["–º–æ–¥—É–ª—å"]] = —Ä–µ–∑—É–ª—å—Ç–∞—Ç

        # –≠—Ç–∞–ø 4: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä = self.–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.—Å–æ–∑–¥–∞—Ç—å_–º–æ–¥—É–ª—å("21_report_generator")

        –∏—Ç–æ–≥–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ = {
            **—Ä–µ–∑—É–ª—å—Ç–∞—Ç_—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è,
            "–ø–ª–∞–Ω_–∞—Ç–∞–∫–∏": –ø–ª–∞–Ω_–∞—Ç–∞–∫–∏,
            "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫": —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–∞—Ç–∞–∫
        }

        –æ—Ç—á–µ—Ç = await –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.–≤—ã–ø–æ–ª–Ω–∏—Ç—å(–∏—Ç–æ–≥–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        –∑–∞–ø–∏—Å—å_–∏—Å—Ç–æ—Ä–∏–∏ = {
            "—Ü–µ–ª—å": —Ü–µ–ª—å,
            "–≤—Ä–µ–º—è": datetime.now().isoformat(),
            "—Ä–µ–∑—É–ª—å—Ç–∞—Ç": –∏—Ç–æ–≥–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ
        }
        self.–∏—Å—Ç–æ—Ä–∏—è_–∞—Ç–∞–∫.append(–∑–∞–ø–∏—Å—å_–∏—Å—Ç–æ—Ä–∏–∏)

        logger.info("‚úÖ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return –æ—Ç—á–µ—Ç

    def –ø–æ–∫–∞–∑–∞—Ç—å_–¥–æ—Å—Ç—É–ø–Ω—ã–µ_–º–æ–¥—É–ª–∏(self):
        """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
        print("\nüß© –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ IP ROAST 4.0:")
        print("=" * 50)

        –º–æ–¥—É–ª–∏_–∏–Ω—Ñ–æ = [
            ("1_signature_scanner", "–°–∫–∞–Ω–µ—Ä —Å–∏–≥–Ω–∞—Ç—É—Ä", "–°–∏–≥–Ω–∞—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑"),
            ("2_service_detector", "–î–µ—Ç–µ–∫—Ç–æ—Ä —Å–µ—Ä–≤–∏—Å–æ–≤", "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"),
            ("3_vulnerability_matcher", "–°–æ–ø–æ—Å—Ç–∞–≤–∏—Ç–µ–ª—å —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π", "–ü–æ–∏—Å–∫ CVE"),
            ("4_decision_engine", "–î–≤–∏–∂–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π", "–ò–ò –∞–Ω–∞–ª–∏–∑"),
            ("5_adaptive_selector", "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä", "–í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"),
            ("7_web_attack_module", "–ú–æ–¥—É–ª—å –≤–µ–±-–∞—Ç–∞–∫", "HTTP/HTTPS –∞—Ç–∞–∫–∏"),
            ("8_network_attack_module", "–ú–æ–¥—É–ª—å —Å–µ—Ç–µ–≤—ã—Ö –∞—Ç–∞–∫", "–°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã"),
            ("11_reconnaissance_module", "–ú–æ–¥—É–ª—å —Ä–∞–∑–≤–µ–¥–∫–∏", "OSINT —Å–±–æ—Ä"),
            ("21_report_generator", "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤", "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤"),
            ("25_configuration_manager", "–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
        ]

        for i, (–º–æ–¥—É–ª—å_id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ) in enumerate(–º–æ–¥—É–ª–∏_–∏–Ω—Ñ–æ, 1):
            print(f"{i:2d}. {–Ω–∞–∑–≤–∞–Ω–∏–µ}")
            print(f"    ID: {–º–æ–¥—É–ª—å_id}")
            print(f"    –û–ø–∏—Å–∞–Ω–∏–µ: {–æ–ø–∏—Å–∞–Ω–∏–µ}")
            print()

        print(f"–í—Å–µ–≥–æ –º–æ–¥—É–ª–µ–π: 25 (–ø–æ–∫–∞–∑–∞–Ω–æ 10 –æ—Å–Ω–æ–≤–Ω—ã—Ö)")

# –î–µ–º–æ —Ñ—É–Ω–∫—Ü–∏—è
async def –¥–µ–º–æ_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    —Å–∏—Å—Ç–µ–º–∞ = –ì–ª–∞–≤–Ω–∞—è–°–∏—Å—Ç–µ–º–∞()

    # –ü–æ–∫–∞–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    —Å–∏—Å—Ç–µ–º–∞.–ø–æ–∫–∞–∑–∞—Ç—å_–¥–æ—Å—Ç—É–ø–Ω—ã–µ_–º–æ–¥—É–ª–∏()

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–º–æ —Ü–µ–ª–µ–π
    –¥–µ–º–æ_—Ü–µ–ª–∏ = ["127.0.0.1", "192.168.1.1"]

    for —Ü–µ–ª—å in –¥–µ–º–æ_—Ü–µ–ª–∏:
        print(f"\n{'='*60}")
        print(f"üéØ –î–ï–ú–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: {—Ü–µ–ª—å}")
        print('='*60)

        try:
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = await —Å–∏—Å—Ç–µ–º–∞.–∑–∞–ø—É—Å—Ç–∏—Ç—å_–ø–æ–ª–Ω–æ–µ_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ(—Ü–µ–ª—å)
            if —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç.get('—Ñ–∞–π–ª_–æ—Ç—á–µ—Ç–∞', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {—Ü–µ–ª—å}: {e}")

        print()

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ IP ROAST 4.0 - –î–µ–º–æ –≤–µ—Ä—Å–∏—è")
    await –¥–µ–º–æ_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ()
    print("\nüëã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
