"use client";

import React, { useState, useMemo } from 'react';
import { useTranslations } from 'next-intl';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import {
    AlertTriangle,
    Shield,
    Search,
    Filter,
    Download,
    Eye,
    ExternalLink,
    Server,
    Bug,
    CheckCircle,
    XCircle,
    Clock,
    TrendingUp,
    Activity,
    BarChart3,
    FileDown,
    RefreshCw
} from 'lucide-react';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';
import { scanResultData, hostStatistics, vulnerabilityCategories, uniqueHosts, type VulnerabilityItem } from './data';

const ScanResultsPage = () => {
    const t = useTranslations('VulnerabilityScanner');
    const tCommon = useTranslations('Common');

    // Состояния для фильтрации
    const [searchTerm, setSearchTerm] = useState('');
    const [severityFilter, setSeverityFilter] = useState('all');
    const [categoryFilter, setCategoryFilter] = useState('all');
    const [hostFilter, setHostFilter] = useState('all');
    const [statusFilter, setStatusFilter] = useState('all');
    const [selectedVulnerability, setSelectedVulnerability] = useState<VulnerabilityItem | null>(null);

    // Фильтрация уязвимостей
    const filteredVulnerabilities = useMemo(() => {
        return scanResultData.vulnerabilities.filter(vuln => {
            const matchesSearch = vuln.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                vuln.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                vuln.host.includes(searchTerm);

            const matchesSeverity = severityFilter === 'all' || vuln.severity === severityFilter;
            const matchesCategory = categoryFilter === 'all' || vuln.category === categoryFilter;
            const matchesHost = hostFilter === 'all' || vuln.host === hostFilter;
            const matchesStatus = statusFilter === 'all' || vuln.status === statusFilter;

            return matchesSearch && matchesSeverity && matchesCategory && matchesHost && matchesStatus;
        });
    }, [searchTerm, severityFilter, categoryFilter, hostFilter, statusFilter]);

    // Функции для получения цветов и иконок
    const getSeverityColor = (severity: string) => {
        switch (severity) {
            case 'critical':
                return 'bg-red-700 text-white';
            case 'high':
                return 'bg-orange-600 text-white';
            case 'medium':
                return 'bg-yellow-500 text-black';
            case 'low':
                return 'bg-green-600 text-white';
            case 'informational':
                return 'bg-blue-500 text-white';
            default:
                return 'bg-gray-500 text-white';
        }
    };

    const getStatusColor = (status: string) => {
        switch (status) {
            case 'open':
                return 'bg-red-600 text-white';
            case 'fixed':
                return 'bg-green-600 text-white';
            case 'mitigated':
                return 'bg-blue-600 text-white';
            case 'false_positive':
                return 'bg-gray-500 text-white';
            case 'accepted_risk':
                return 'bg-yellow-600 text-black';
            default:
                return 'bg-gray-500 text-white';
        }
    };

    const getSeverityIcon = (severity: string) => {
        switch (severity) {
            case 'critical':
                return <AlertTriangle className="w-4 h-4 text-red-700" />;
            case 'high':
                return <AlertTriangle className="w-4 h-4 text-orange-600" />;
            case 'medium':
                return <Shield className="w-4 h-4 text-yellow-500" />;
            case 'low':
                return <Shield className="w-4 h-4 text-green-600" />;
            default:
                return <Shield className="w-4 h-4 text-blue-500" />;
        }
    };

    const handleExportResults = () => {
        console.log('Exporting scan results...');
    };

    return (
        <div className="max-w-7xl mx-auto p-6 space-y-6">
            {/* Заголовок */}
            <div className="flex items-center justify-between">
                <div>
                    <h1 className="text-3xl font-bold tracking-tight">Результаты сканирования</h1>
                    <p className="text-muted-foreground mt-2">
                        {scanResultData.scanName} • {scanResultData.target}
                    </p>
                </div>
                <div className="flex items-center gap-2">
                    <Button variant="outline" size="sm">
                        <RefreshCw className="w-4 h-4 mr-2" />
                        Обновить
                    </Button>
                    <Button variant="outline" size="sm" onClick={handleExportResults}>
                        <FileDown className="w-4 h-4 mr-2" />
                        Экспорт
                    </Button>
                </div>
            </div>

            {/* Общая информация о сканировании */}
            <Card>
                <CardHeader>
                    <CardTitle>Сводка сканирования</CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
                        <div className="text-center">
                            <div className="text-2xl font-bold">{scanResultData.hostsScanned}</div>
                            <div className="text-sm text-muted-foreground">Хостов</div>
                        </div>
                        <div className="text-center">
                            <div className="text-2xl font-bold">{scanResultData.portsScanned}</div>
                            <div className="text-sm text-muted-foreground">Портов</div>
                        </div>
                        <div className="text-center">
                            <div className="text-2xl font-bold">{scanResultData.servicesIdentified}</div>
                            <div className="text-sm text-muted-foreground">Сервисов</div>
                        </div>
                        <div className="text-center">
                            <div className="text-2xl font-bold">{scanResultData.duration}</div>
                            <div className="text-sm text-muted-foreground">Длительность</div>
                        </div>
                        <div className="text-center">
                            <div className="text-2xl font-bold text-red-700">{scanResultData.riskScore}/10</div>
                            <div className="text-sm text-muted-foreground">Риск</div>
                        </div>
                        <div className="text-center">
                            <div className="text-2xl font-bold text-blue-600">{scanResultData.complianceScore}%</div>
                            <div className="text-sm text-muted-foreground">Соответствие</div>
                        </div>
                    </div>
                </CardContent>
            </Card>

            {/* Статистика по уязвимостям */}
            <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
                <Card>
                    <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-muted-foreground">Критические</p>
                                <p className="text-2xl font-bold text-red-700">{scanResultData.summary.critical}</p>
                            </div>
                            <AlertTriangle className="w-8 h-8 text-red-700" />
                        </div>
                    </CardContent>
                </Card>

                <Card>
                    <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-muted-foreground">Высокие</p>
                                <p className="text-2xl font-bold text-orange-600">{scanResultData.summary.high}</p>
                            </div>
                            <AlertTriangle className="w-8 h-8 text-orange-600" />
                        </div>
                    </CardContent>
                </Card>

                <Card>
                    <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-muted-foreground">Средние</p>
                                <p className="text-2xl font-bold text-yellow-500">{scanResultData.summary.medium}</p>
                            </div>
                            <Shield className="w-8 h-8 text-yellow-500" />
                        </div>
                    </CardContent>
                </Card>

                <Card>
                    <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-muted-foreground">Низкие</p>
                                <p className="text-2xl font-bold text-green-600">{scanResultData.summary.low}</p>
                            </div>
                            <Shield className="w-8 h-8 text-green-600" />
                        </div>
                    </CardContent>
                </Card>

                <Card>
                    <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                            <div>
                                <p className="text-sm text-muted-foreground">Всего</p>
                                <p className="text-2xl font-bold">{scanResultData.summary.total}</p>
                            </div>
                            <Bug className="w-8 h-8 text-muted-foreground" />
                        </div>
                    </CardContent>
                </Card>
            </div>

            {/* Вкладки с результатами */}
            <Tabs defaultValue="vulnerabilities" className="space-y-4">
                <TabsList>
                    <TabsTrigger value="vulnerabilities">Уязвимости</TabsTrigger>
                    <TabsTrigger value="hosts">Хосты</TabsTrigger>
                    <TabsTrigger value="statistics">Статистика</TabsTrigger>
                </TabsList>

                <TabsContent value="vulnerabilities" className="space-y-4">
                    {/* Фильтры */}
                    <Card>
                        <CardHeader>
                            <CardTitle className="flex items-center gap-2">
                                <Filter className="w-5 h-5" />
                                Фильтры
                            </CardTitle>
                        </CardHeader>
                        <CardContent>
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
                                <div className="space-y-2">
                                    <label className="text-sm font-medium">Поиск</label>
                                    <div className="relative">
                                        <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
                                        <Input
                                            placeholder="Поиск уязвимостей..."
                                            value={searchTerm}
                                            onChange={(e) => setSearchTerm(e.target.value)}
                                            className="pl-10"
                                        />
                                    </div>
                                </div>

                                <div className="space-y-2">
                                    <label className="text-sm font-medium">Серьезность</label>
                                    <Select value={severityFilter} onValueChange={setSeverityFilter}>
                                        <SelectTrigger>
                                            <SelectValue />
                                        </SelectTrigger>
                                        <SelectContent>
                                            <SelectItem value="all">Все</SelectItem>
                                            <SelectItem value="critical">Критические</SelectItem>
                                            <SelectItem value="high">Высокие</SelectItem>
                                            <SelectItem value="medium">Средние</SelectItem>
                                            <SelectItem value="low">Низкие</SelectItem>
                                            <SelectItem value="informational">Информационные</SelectItem>
                                        </SelectContent>
                                    </Select>
                                </div>

                                <div className="space-y-2">
                                    <label className="text-sm font-medium">Категория</label>
                                    <Select value={categoryFilter} onValueChange={setCategoryFilter}>
                                        <SelectTrigger>
                                            <SelectValue />
                                        </SelectTrigger>
                                        <SelectContent>
                                            <SelectItem value="all">Все категории</SelectItem>
                                            {vulnerabilityCategories.map(category => (
                                                <SelectItem key={category} value={category}>{category}</SelectItem>
                                            ))}
                                        </SelectContent>
                                    </Select>
                                </div>

                                <div className="space-y-2">
                                    <label className="text-sm font-medium">Хост</label>
                                    <Select value={hostFilter} onValueChange={setHostFilter}>
                                        <SelectTrigger>
                                            <SelectValue />
                                        </SelectTrigger>
                                        <SelectContent>
                                            <SelectItem value="all">Все хосты</SelectItem>
                                            {uniqueHosts.map(host => (
                                                <SelectItem key={host} value={host}>{host}</SelectItem>
                                            ))}
                                        </SelectContent>
                                    </Select>
                                </div>

                                <div className="space-y-2">
                                    <label className="text-sm font-medium">Статус</label>
                                    <Select value={statusFilter} onValueChange={setStatusFilter}>
                                        <SelectTrigger>
                                            <SelectValue />
                                        </SelectTrigger>
                                        <SelectContent>
                                            <SelectItem value="all">Все статусы</SelectItem>
                                            <SelectItem value="open">Открыты</SelectItem>
                                            <SelectItem value="fixed">Исправлены</SelectItem>
                                            <SelectItem value="mitigated">Смягчены</SelectItem>
                                            <SelectItem value="false_positive">Ложные</SelectItem>
                                            <SelectItem value="accepted_risk">Принятый риск</SelectItem>
                                        </SelectContent>
                                    </Select>
                                </div>
                            </div>

                            <div className="flex items-center justify-between mt-4">
                                <p className="text-sm text-muted-foreground">
                                    Найдено уязвимостей: {filteredVulnerabilities.length} из {scanResultData.vulnerabilities.length}
                                </p>
                                <Button
                                    variant="outline"
                                    size="sm"
                                    onClick={() => {
                                        setSearchTerm('');
                                        setSeverityFilter('all');
                                        setCategoryFilter('all');
                                        setHostFilter('all');
                                        setStatusFilter('all');
                                    }}
                                >
                                    Сбросить фильтры
                                </Button>
                            </div>
                        </CardContent>
                    </Card>

                    {/* Таблица уязвимостей */}
                    <Card>
                        <CardHeader>
                            <CardTitle>Обнаруженные уязвимости</CardTitle>
                        </CardHeader>
                        <CardContent>
                            <ScrollArea className="h-[600px]">
                                <Table>
                                    <TableHeader>
                                        <TableRow>
                                            <TableHead>Уязвимость</TableHead>
                                            <TableHead>Хост</TableHead>
                                            <TableHead>Серьезность</TableHead>
                                            <TableHead>CVSS</TableHead>
                                            <TableHead>Статус</TableHead>
                                            <TableHead>Действия</TableHead>
                                        </TableRow>
                                    </TableHeader>
                                    <TableBody>
                                        {filteredVulnerabilities.map((vuln) => (
                                            <TableRow key={vuln.id}>
                                                <TableCell>
                                                    <div className="space-y-1">
                                                        <p className="font-medium">{vuln.name}</p>
                                                        <div className="flex items-center gap-2">
                                                            {vuln.cve && (
                                                                <Badge className="text-xs bg-gray-100 text-gray-800">
                                                                    {vuln.cve}
                                                                </Badge>
                                                            )}
                                                            <Badge className="text-xs bg-blue-100 text-blue-800">
                                                                {vuln.category}
                                                            </Badge>
                                                            {vuln.exploitable && (
                                                                <Badge className="text-xs bg-red-100 text-red-800">
                                                                    Эксплуатируемая
                                                                </Badge>
                                                            )}
                                                        </div>
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="space-y-1">
                                                        <p className="font-mono text-sm">{vuln.host}</p>
                                                        {vuln.port && (
                                                            <p className="text-xs text-muted-foreground">
                                                                {vuln.service}:{vuln.port}
                                                            </p>
                                                        )}
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="flex items-center gap-2">
                                                        {getSeverityIcon(vuln.severity)}
                                                        <Badge className={`text-xs ${getSeverityColor(vuln.severity)}`}>
                                                            {t(`severity_levels.${vuln.severity}`)}
                                                        </Badge>
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <span className="font-mono font-semibold">{vuln.cvss}</span>
                                                </TableCell>
                                                <TableCell>
                                                    <Badge className={`text-xs ${getStatusColor(vuln.status)}`}>
                                                        {vuln.status === 'open' ? 'Открыта' :
                                                            vuln.status === 'fixed' ? 'Исправлена' :
                                                                vuln.status === 'mitigated' ? 'Смягчена' :
                                                                    vuln.status === 'false_positive' ? 'Ложная' :
                                                                        'Принятый риск'}
                                                    </Badge>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="flex items-center gap-1">
                                                        <Dialog>
                                                            <DialogTrigger asChild>
                                                                <Button
                                                                    variant="ghost"
                                                                    size="sm"
                                                                    onClick={() => setSelectedVulnerability(vuln)}
                                                                >
                                                                    <Eye className="w-4 h-4" />
                                                                </Button>
                                                            </DialogTrigger>
                                                            {selectedVulnerability && (
                                                                <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
                                                                    <DialogHeader>
                                                                        <DialogTitle className="flex items-center gap-2">
                                                                            {getSeverityIcon(selectedVulnerability.severity)}
                                                                            {selectedVulnerability.name}
                                                                        </DialogTitle>
                                                                    </DialogHeader>
                                                                    <div className="space-y-6">
                                                                        {/* Основная информация */}
                                                                        <div className="grid grid-cols-2 gap-4">
                                                                            <div className="space-y-2">
                                                                                <h4 className="font-semibold">Детали</h4>
                                                                                <div className="space-y-1 text-sm">
                                                                                    <p><strong>Хост:</strong> {selectedVulnerability.host}</p>
                                                                                    {selectedVulnerability.port && (
                                                                                        <p><strong>Порт:</strong> {selectedVulnerability.port}</p>
                                                                                    )}
                                                                                    {selectedVulnerability.service && (
                                                                                        <p><strong>Сервис:</strong> {selectedVulnerability.service}</p>
                                                                                    )}
                                                                                    <p><strong>CVSS:</strong> {selectedVulnerability.cvss}</p>
                                                                                    {selectedVulnerability.cve && (
                                                                                        <p><strong>CVE:</strong> {selectedVulnerability.cve}</p>
                                                                                    )}
                                                                                </div>
                                                                            </div>
                                                                            <div className="space-y-2">
                                                                                <h4 className="font-semibold">Статус</h4>
                                                                                <div className="space-y-2">
                                                                                    <Badge className={getSeverityColor(selectedVulnerability.severity)}>
                                                                                        {t(`severity_levels.${selectedVulnerability.severity}`)}
                                                                                    </Badge>
                                                                                    <Badge className={getStatusColor(selectedVulnerability.status)}>
                                                                                        {selectedVulnerability.status}
                                                                                    </Badge>
                                                                                    {selectedVulnerability.exploitable && (
                                                                                        <Badge className="bg-red-100 text-red-800">
                                                                                            Эксплуатируемая
                                                                                        </Badge>
                                                                                    )}
                                                                                    {selectedVulnerability.patchAvailable && (
                                                                                        <Badge className="bg-green-100 text-green-800">
                                                                                            Патч доступен
                                                                                        </Badge>
                                                                                    )}
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        {/* Описание */}
                                                                        <div className="space-y-2">
                                                                            <h4 className="font-semibold">Описание</h4>
                                                                            <p className="text-sm text-muted-foreground">
                                                                                {selectedVulnerability.description}
                                                                            </p>
                                                                        </div>

                                                                        {/* Воздействие */}
                                                                        <div className="space-y-2">
                                                                            <h4 className="font-semibold">Воздействие</h4>
                                                                            <p className="text-sm text-muted-foreground">
                                                                                {selectedVulnerability.impact}
                                                                            </p>
                                                                        </div>

                                                                        {/* Решение */}
                                                                        <div className="space-y-2">
                                                                            <h4 className="font-semibold">Рекомендации по устранению</h4>
                                                                            <p className="text-sm text-muted-foreground">
                                                                                {selectedVulnerability.solution}
                                                                            </p>
                                                                        </div>

                                                                        {/* Доказательства */}
                                                                        {selectedVulnerability.evidence.length > 0 && (
                                                                            <div className="space-y-2">
                                                                                <h4 className="font-semibold">Доказательства</h4>
                                                                                <div className="bg-gray-100 p-3 rounded-md">
                                                                                    <pre className="text-xs whitespace-pre-wrap">
                                                                                        {selectedVulnerability.evidence.join('\n')}
                                                                                    </pre>
                                                                                </div>
                                                                            </div>
                                                                        )}

                                                                        {/* Ссылки */}
                                                                        {selectedVulnerability.references.length > 0 && (
                                                                            <div className="space-y-2">
                                                                                <h4 className="font-semibold">Ссылки</h4>
                                                                                <ul className="space-y-1">
                                                                                    {selectedVulnerability.references.map((ref, index) => (
                                                                                        <li key={index}>
                                                                                            <a
                                                                                                href={ref}
                                                                                                target="_blank"
                                                                                                rel="noopener noreferrer"
                                                                                                className="text-blue-600 hover:underline text-sm flex items-center gap-1"
                                                                                            >
                                                                                                <ExternalLink className="w-3 h-3" />
                                                                                                {ref}
                                                                                            </a>
                                                                                        </li>
                                                                                    ))}
                                                                                </ul>
                                                                            </div>
                                                                        )}
                                                                    </div>
                                                                </DialogContent>
                                                            )}
                                                        </Dialog>
                                                    </div>
                                                </TableCell>
                                            </TableRow>
                                        ))}
                                    </TableBody>
                                </Table>
                            </ScrollArea>

                            {filteredVulnerabilities.length === 0 && (
                                <div className="text-center py-12">
                                    <Bug className="w-12 h-12 text-muted-foreground mx-auto mb-4" />
                                    <h3 className="text-lg font-semibold mb-2">Уязвимости не найдены</h3>
                                    <p className="text-muted-foreground">
                                        Попробуйте изменить фильтры поиска
                                    </p>
                                </div>
                            )}
                        </CardContent>
                    </Card>
                </TabsContent>

                <TabsContent value="hosts" className="space-y-4">
                    <Card>
                        <CardHeader>
                            <CardTitle>Статистика по хостам</CardTitle>
                        </CardHeader>
                        <CardContent>
                            <div className="space-y-4">
                                {hostStatistics.map((host, index) => (
                                    <Card key={index}>
                                        <CardContent className="p-4">
                                            <div className="flex items-center justify-between mb-4">
                                                <div className="flex items-center gap-2">
                                                    <Server className="w-5 h-5" />
                                                    <span className="font-mono font-semibold">{host.host}</span>
                                                    <Badge className="bg-blue-100 text-blue-800">
                                                        Риск: {host.riskScore}/10
                                                    </Badge>
                                                </div>
                                                <div className="text-sm text-muted-foreground">
                                                    Сервисы: {host.services.join(', ')}
                                                </div>
                                            </div>

                                            <div className="grid grid-cols-5 gap-4">
                                                <div className="text-center">
                                                    <div className="text-lg font-bold text-red-700">
                                                        {host.vulnerabilities.critical}
                                                    </div>
                                                    <div className="text-xs text-muted-foreground">Критические</div>
                                                </div>
                                                <div className="text-center">
                                                    <div className="text-lg font-bold text-orange-600">
                                                        {host.vulnerabilities.high}
                                                    </div>
                                                    <div className="text-xs text-muted-foreground">Высокие</div>
                                                </div>
                                                <div className="text-center">
                                                    <div className="text-lg font-bold text-yellow-500">
                                                        {host.vulnerabilities.medium}
                                                    </div>
                                                    <div className="text-xs text-muted-foreground">Средние</div>
                                                </div>
                                                <div className="text-center">
                                                    <div className="text-lg font-bold text-green-600">
                                                        {host.vulnerabilities.low}
                                                    </div>
                                                    <div className="text-xs text-muted-foreground">Низкие</div>
                                                </div>
                                                <div className="text-center">
                                                    <div className="text-lg font-bold text-blue-600">
                                                        {host.vulnerabilities.informational}
                                                    </div>
                                                    <div className="text-xs text-muted-foreground">Инф.</div>
                                                </div>
                                            </div>
                                        </CardContent>
                                    </Card>
                                ))}
                            </div>
                        </CardContent>
                    </Card>
                </TabsContent>

                <TabsContent value="statistics" className="space-y-4">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <Card>
                            <CardHeader>
                                <CardTitle>Распределение по серьезности</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="space-y-4">
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Критические</span>
                                        <span className="text-sm font-semibold">{scanResultData.summary.critical}</span>
                                    </div>
                                    <Progress
                                        value={(scanResultData.summary.critical / scanResultData.summary.total) * 100}
                                        className="h-2"
                                    />

                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Высокие</span>
                                        <span className="text-sm font-semibold">{scanResultData.summary.high}</span>
                                    </div>
                                    <Progress
                                        value={(scanResultData.summary.high / scanResultData.summary.total) * 100}
                                        className="h-2"
                                    />

                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Средние</span>
                                        <span className="text-sm font-semibold">{scanResultData.summary.medium}</span>
                                    </div>
                                    <Progress
                                        value={(scanResultData.summary.medium / scanResultData.summary.total) * 100}
                                        className="h-2"
                                    />

                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Низкие</span>
                                        <span className="text-sm font-semibold">{scanResultData.summary.low}</span>
                                    </div>
                                    <Progress
                                        value={(scanResultData.summary.low / scanResultData.summary.total) * 100}
                                        className="h-2"
                                    />
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle>Рекомендации</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="space-y-4">
                                    <div className="p-3 bg-red-50 border border-red-200 rounded-md">
                                        <h4 className="font-semibold text-red-800 mb-2">Приоритет 1 - Критические</h4>
                                        <p className="text-sm text-red-700">
                                            Немедленно исправьте {scanResultData.summary.critical} критические уязвимости
                                        </p>
                                    </div>

                                    <div className="p-3 bg-orange-50 border border-orange-200 rounded-md">
                                        <h4 className="font-semibold text-orange-800 mb-2">Приоритет 2 - Высокие</h4>
                                        <p className="text-sm text-orange-700">
                                            Запланируйте исправление {scanResultData.summary.high} уязвимостей высокой серьезности в течение недели
                                        </p>
                                    </div>

                                    <div className="p-3 bg-blue-50 border border-blue-200 rounded-md">
                                        <h4 className="font-semibold text-blue-800 mb-2">Общие рекомендации</h4>
                                        <ul className="text-sm text-blue-700 space-y-1">
                                            <li>• Обновите устаревшие компоненты</li>
                                            <li>• Настройте заголовки безопасности</li>
                                            <li>• Проведите аудит конфигураций</li>
                                        </ul>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>
                    </div>
                </TabsContent>
            </Tabs>
        </div>
    );
};

export default ScanResultsPage;
