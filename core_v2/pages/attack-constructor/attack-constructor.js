/**
 * IP Roast Enterprise 4.0 - Attack Constructor Main Module
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
 * –í–µ—Ä—Å–∏—è: 4.0.0-Enhanced-Main
 * 
 * @description –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * @author IP Roast Security Team
 * @requires Enhanced PageManager, Core v2 Architecture
 * @integrates all attack-constructor modules
 */

console.log('üöÄ IP Roast Enterprise - Attack Constructor Main Module v4.0.0-Enhanced');

// =======================================================
// –ú–û–î–£–õ–¨–ù–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê - –ò–ú–ü–û–†–¢–´ –ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ò
// =======================================================

/**
 * –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ–º lazy loading –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */
class AttackConstructorModuleLoader {
    constructor() {
        this.loadedModules = new Map();
        this.moduleStatus = new Map();
        this.loadingPromises = new Map();
        this.basePath = './pages/attack-constructor/';

        console.log('üì¶ Module loader initialized');
    }

    /**
     * –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
     */
    async loadModule(moduleName, retryCount = 3) {
        if (this.loadedModules.has(moduleName)) {
            return this.loadedModules.get(moduleName);
        }

        if (this.loadingPromises.has(moduleName)) {
            return this.loadingPromises.get(moduleName);
        }

        const loadPromise = this._loadModuleInternal(moduleName, retryCount);
        this.loadingPromises.set(moduleName, loadPromise);

        try {
            const module = await loadPromise;
            this.loadedModules.set(moduleName, module);
            this.moduleStatus.set(moduleName, 'loaded');
            console.log(`‚úÖ Module loaded: ${moduleName}`);
            return module;
        } catch (error) {
            this.moduleStatus.set(moduleName, 'error');
            console.error(`‚ùå Failed to load module ${moduleName}:`, error);
            throw error;
        } finally {
            this.loadingPromises.delete(moduleName);
        }
    }

    async _loadModuleInternal(moduleName, retryCount) {
        const modulePath = `${this.basePath}${moduleName}.js`;

        for (let attempt = 1; attempt <= retryCount; attempt++) {
            try {
                this.moduleStatus.set(moduleName, 'loading');

                // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
                const moduleScript = await this._loadScript(modulePath);

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –º–æ–¥—É–ª—è –∏–ª–∏ –∏–∑ window
                const moduleExport = window[this._getModuleExportName(moduleName)];

                if (!moduleExport) {
                    throw new Error(`Module export not found for ${moduleName}`);
                }

                return moduleExport;

            } catch (error) {
                console.warn(`‚ö†Ô∏è Module load attempt ${attempt}/${retryCount} failed for ${moduleName}:`, error);

                if (attempt === retryCount) {
                    throw error;
                }

                // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempt) * 1000));
            }
        }
    }

    _loadScript(src) {
        return new Promise((resolve, reject) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
            const existingScript = document.querySelector(`script[src="${src}"]`);
            if (existingScript) {
                resolve(existingScript);
                return;
            }

            const script = document.createElement('script');
            script.src = src;
            script.type = 'text/javascript';
            script.async = true;

            script.onload = () => {
                console.log(`üìú Script loaded: ${src}`);
                resolve(script);
            };

            script.onerror = (error) => {
                console.error(`‚ùå Script load error: ${src}`, error);
                reject(new Error(`Failed to load script: ${src}`));
            };

            document.head.appendChild(script);
        });
    }

    _getModuleExportName(moduleName) {
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –∫–ª–∞—Å—Å–∞–º
        const exportNames = {
            // –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ Attack Constructor
            'attack-constructor-core': 'AttackConstructorCore',
            'signature-components': 'SignatureComponentsManager',
            'rule-templates': 'RuleTemplateManager',
            'canvas-manager': 'CanvasManager',
            'connection-manager': 'ConnectionManager',
            'rule-generator': 'RuleGenerator',
            'test-manager': 'TestManager',
            'ui-manager': 'UIManager',

            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            'connection-mgr': 'ConnectionManager',
            'rule-template': 'RuleTemplateManager',
            'sig-components': 'SignatureComponentsManager'
        };

        const exportName = exportNames[moduleName];
        if (!exportName) {
            console.warn(`‚ö†Ô∏è Unknown module: ${moduleName}, using fallback: ${moduleName}`);
            return moduleName;
        }

        console.log(`üì¶ Module "${moduleName}" ‚Üí Export "${exportName}"`);
        return exportName;
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
     */
    async loadAllModules() {
        const coreModules = [
            'attack-constructor-core'
        ];

        const supportingModules = [
            'signature-components',
            'rule-templates',
            'canvas-manager',
            'connection-manager',
            'rule-generator',
            'test-manager',
            'ui-manager'
        ];

        console.log('üìö Loading core modules...');

        try {
            // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
            const coreResults = await Promise.all(
                coreModules.map(module => this.loadModule(module))
            );

            console.log('üìö Loading supporting modules...');

            // –ó–∞—Ç–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –º–æ–¥—É–ª–∏ (–º–æ–∂–Ω–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ)
            const supportingResults = await Promise.allSettled(
                supportingModules.map(module => this.loadModule(module))
            );

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö –º–æ–¥—É–ª–µ–π
            const failedModules = supportingResults
                .map((result, index) => ({ result, name: supportingModules[index] }))
                .filter(({ result }) => result.status === 'rejected')
                .map(({ name, result }) => ({ name, error: result.reason }));

            if (failedModules.length > 0) {
                console.warn('‚ö†Ô∏è Some supporting modules failed to load:', failedModules);
                // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            }

            return {
                core: coreResults,
                supporting: supportingResults,
                failed: failedModules
            };

        } catch (error) {
            console.error('‚ùå Critical error loading core modules:', error);
            throw error;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π
     */
    getLoadingStatus() {
        const status = {};
        this.moduleStatus.forEach((status_val, module) => {
            status[module] = status_val;
        });
        return status;
    }
}

// =======================================================
// –û–°–ù–û–í–ù–û–ô –ö–õ–ê–°–° ATTACK CONSTRUCTOR
// =======================================================

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å Attack Constructor - –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
 */
class AttackConstructor {
    constructor() {
        this.version = '4.0.0-Enhanced-Main';
        this.buildDate = new Date().toISOString();
        this.isInitialized = false;
        this.initStartTime = performance.now();

        // –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ –º–æ–¥—É–ª–∏
        this.moduleLoader = new AttackConstructorModuleLoader();
        this.core = null;
        this.modules = new Map();

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.state = {
            currentPage: 'attack-constructor',
            isActive: false,
            hasUnsavedChanges: false,
            lastActivity: Date.now()
        };

        // –°–æ–±—ã—Ç–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.eventHandlers = new Map();
        this.initializationPromise = null;

        console.log('üéØ Attack Constructor Main initialized');
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    async initialize() {
        if (this.initializationPromise) {
            return this.initializationPromise;
        }

        this.initializationPromise = this._performInitialization();
        return this.initializationPromise;
    }

    async _performInitialization() {
        try {
            console.log('üöÄ Starting Attack Constructor initialization...');

            // –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            this._validateEnvironment();

            // –≠—Ç–∞–ø 2: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
            const loadResults = await this.moduleLoader.loadAllModules();
            console.log('üì¶ Modules loaded:', this.moduleLoader.getLoadingStatus());

            // –≠—Ç–∞–ø 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è core –º–æ–¥—É–ª—è
            await this._initializeCore();

            // –≠—Ç–∞–ø 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            await this._initializeSupportingModules(loadResults);

            // –≠—Ç–∞–ø 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
            this._establishModuleConnections();

            // –≠—Ç–∞–ø 6: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            this._registerGlobalHandlers();

            // –≠—Ç–∞–ø 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Enhanced PageManager
            this._integrateWithPageManager();

            // –≠—Ç–∞–ø 8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç–ª–∞–¥–∫–∏
            this._setupMonitoring();

            // –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è
            this.isInitialized = true;
            this.state.isActive = true;

            const initTime = performance.now() - this.initStartTime;
            console.log(`‚úÖ Attack Constructor initialized successfully in ${initTime.toFixed(2)}ms`);

            // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            this._notifyReady();

            return this;

        } catch (error) {
            console.error('‚ùå Attack Constructor initialization failed:', error);
            this._handleInitializationError(error);
            throw error;
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
     */
    _validateEnvironment() {
        console.log('üîç Validating environment...');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        if (typeof window === 'undefined') {
            throw new Error('Browser environment required');
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö API
        const requiredAPIs = ['fetch', 'Promise', 'Map', 'Set', 'Symbol'];
        const missingAPIs = requiredAPIs.filter(api => typeof window[api] === 'undefined');

        if (missingAPIs.length > 0) {
            throw new Error(`Missing required APIs: ${missingAPIs.join(', ')}`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ DOM –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        if (document.readyState === 'loading') {
            return new Promise(resolve => {
                document.addEventListener('DOMContentLoaded', resolve);
            });
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±–∞–∑–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
        const requiredElements = ['rule-canvas', 'component-search'];
        const missingElements = requiredElements.filter(id => !document.getElementById(id));

        if (missingElements.length > 0) {
            console.warn('‚ö†Ô∏è Some DOM elements missing:', missingElements);
        }

        console.log('‚úÖ Environment validation passed');
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è
     */
    async _initializeCore() {
        console.log('üîß Initializing core module...');

        try {
            // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä core –º–æ–¥—É–ª—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            if (window.signatureConstructor) {
                this.core = window.signatureConstructor;
                console.log('‚úÖ Core module found in global scope');
            } else if (window.SignatureAnalysisConstructor) {
                // –ï—Å–ª–∏ –∫–ª–∞—Å—Å –¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
                this.core = new window.SignatureAnalysisConstructor();
                console.log('‚úÖ Core module instantiated');
            } else {
                throw new Error('Core module not available');
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å core –º–æ–¥—É–ª—è
            if (!this.core.isInitialized) {
                console.log('‚è≥ Waiting for core module initialization...');
                // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ core –º–æ–¥—É–ª—è
                await new Promise(resolve => setTimeout(resolve, 1000));
            }

            this.modules.set('core', this.core);

        } catch (error) {
            console.error('‚ùå Core module initialization failed:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
     */
    async _initializeSupportingModules(loadResults) {
        console.log('üîß Initializing supporting modules...');

        const moduleConfigs = {
            'signature-components': {
                required: false,
                fallback: () => this.core?.signatureComponents || new Map()
            },
            'rule-templates': {
                required: false,
                fallback: () => ({})
            },
            'canvas-manager': {
                required: false,
                fallback: () => this.core // Core —Å–æ–¥–µ—Ä–∂–∏—Ç canvas —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            },
            'connection-manager': {
                required: false,
                fallback: () => this.core // Core —Å–æ–¥–µ—Ä–∂–∏—Ç connection —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            },
            'rule-generator': {
                required: false,
                fallback: () => this.core // Core —Å–æ–¥–µ—Ä–∂–∏—Ç generation —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            },
            'test-manager': {
                required: false,
                fallback: () => this.core // Core —Å–æ–¥–µ—Ä–∂–∏—Ç test —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            },
            'ui-manager': {
                required: false,
                fallback: () => this.core // Core —Å–æ–¥–µ—Ä–∂–∏—Ç UI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            }
        };

        for (const [moduleName, config] of Object.entries(moduleConfigs)) {
            try {
                let moduleInstance = this.moduleLoader.loadedModules.get(moduleName);

                if (!moduleInstance && config.required) {
                    throw new Error(`Required module ${moduleName} not loaded`);
                }

                if (!moduleInstance) {
                    console.log(`üì¶ Using fallback for ${moduleName}`);
                    moduleInstance = config.fallback();
                }

                this.modules.set(moduleName, moduleInstance);
                console.log(`‚úÖ Module ${moduleName} initialized`);

            } catch (error) {
                if (config.required) {
                    throw error;
                } else {
                    console.warn(`‚ö†Ô∏è Optional module ${moduleName} failed:`, error);
                }
            }
        }
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
     */
    _establishModuleConnections() {
        console.log('üîó Establishing module connections...');

        if (!this.core) {
            console.warn('‚ö†Ô∏è Core module not available for connections');
            return;
        }

        // –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–∂–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ core –º–æ–¥—É–ª—å
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

        const moduleAliases = {
            signatureComponents: this.core.signatureComponents,
            canvasManager: this.core,
            connectionManager: this.core,
            ruleGenerator: this.core,
            testManager: this.core,
            uiManager: this.core
        };

        Object.entries(moduleAliases).forEach(([alias, instance]) => {
            this[alias] = instance;
        });

        console.log('‚úÖ Module connections established');
    }

    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
     */
    _registerGlobalHandlers() {
        console.log('üåê Registering global handlers...');

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è HTML –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        window.attackConstructor = this;
        window.signatureConstructor = this.core;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', (event) => {
            this._handleBeforeUnload(event);
        });

        window.addEventListener('unload', () => {
            this._handleUnload();
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        window.addEventListener('error', (event) => {
            this._handleGlobalError(event);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('visibilitychange', () => {
            this._handleVisibilityChange();
        });

        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ (–µ—Å–ª–∏ core –∏—Ö –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç)
        this._setupKeyboardShortcuts();

        console.log('‚úÖ Global handlers registered');
    }

    /**
     * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Enhanced PageManager
     */
    _integrateWithPageManager() {
        console.log('üìÑ Integrating with Enhanced PageManager...');

        if (window.enhancedPageManager) {
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
            window.enhancedPageManager.on('pageCleanup', (data) => {
                if (data.pageId === 'attack-constructor') {
                    this._handlePageCleanup();
                }
            });

            window.enhancedPageManager.on('pageActivate', (data) => {
                if (data.pageId === 'attack-constructor') {
                    this._handlePageActivate();
                }
            });

            window.enhancedPageManager.on('pageDeactivate', (data) => {
                if (data.pageId === 'attack-constructor') {
                    this._handlePageDeactivate();
                }
            });

            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ PageManager
            window.enhancedPageManager.registerPage('attack-constructor', {
                title: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞',
                module: this,
                cleanup: () => this.cleanup(),
                activate: () => this.activate(),
                deactivate: () => this.deactivate()
            });

            console.log('‚úÖ Enhanced PageManager integration completed');
        } else {
            console.warn('‚ö†Ô∏è Enhanced PageManager not found');
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç–ª–∞–¥–∫–∏
     */
    _setupMonitoring() {
        console.log('üìä Setting up monitoring...');

        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        this.performanceMetrics = {
            initTime: performance.now() - this.initStartTime,
            memoryUsage: performance.memory ? performance.memory.usedJSHeapSize : 'N/A',
            componentCount: this.core?.canvasNodes?.size || 0,
            connectionCount: this.core?.connections?.size || 0
        };

        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
        this.metricsInterval = setInterval(() => {
            this._updateMetrics();
        }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        this.debug = {
            version: this.version,
            buildDate: this.buildDate,
            modules: Array.from(this.modules.keys()),
            state: this.state,
            core: this.core?.getDebugInfo?.() || 'N/A'
        };

        // –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.attackConstructorDebug = this.debug;

        console.log('‚úÖ Monitoring setup completed');
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è
     */
    _notifyReady() {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        const readyEvent = new CustomEvent('attackConstructorReady', {
            detail: {
                version: this.version,
                initTime: performance.now() - this.initStartTime,
                modules: Array.from(this.modules.keys())
            }
        });

        document.dispatchEvent(readyEvent);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        if (window.app?.emit) {
            window.app.emit('moduleReady', {
                module: 'attack-constructor',
                version: this.version
            });
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (window.app?.showSuccessNotification) {
            window.app.showSuccessNotification('–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        }

        console.log('üì¢ Ready notification sent');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    _handleInitializationError(error) {
        console.error('üí• Initialization error handler:', error);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± –æ—à–∏–±–∫–µ
        const errorEvent = new CustomEvent('attackConstructorError', {
            detail: {
                error: error.message,
                stack: error.stack,
                timestamp: Date.now()
            }
        });

        document.dispatchEvent(errorEvent);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (window.app?.showErrorNotification) {
            window.app.showErrorNotification(
                '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.'
            );
        }

        // –¢–µ–ª–µ–º–µ—Ç—Ä–∏—è
        if (window.app?.telemetry?.logError) {
            window.app.telemetry.logError('attack-constructor-init-error', {
                message: error.message,
                stack: error.stack,
                modules: this.moduleLoader.getLoadingStatus()
            });
        }
    }

    // =======================================================
    // –ú–ï–¢–û–î–´ –ñ–ò–ó–ù–ï–ù–ù–û–ì–û –¶–ò–ö–õ–ê
    // =======================================================

    /**
     * –ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    activate() {
        console.log('üü¢ Activating Attack Constructor...');

        this.state.isActive = true;
        this.state.lastActivity = Date.now();

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º core –º–æ–¥—É–ª—å
        if (this.core?.activate) {
            this.core.activate();
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        this._restoreState();

        this.emit('activated');
    }

    /**
     * –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    deactivate() {
        console.log('üü° Deactivating Attack Constructor...');

        this.state.isActive = false;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this._saveState();

        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º core –º–æ–¥—É–ª—å
        if (this.core?.deactivate) {
            this.core.deactivate();
        }

        this.emit('deactivated');
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    cleanup() {
        console.log('üßπ Cleaning up Attack Constructor...');

        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this._saveState();

            // –û—á–∏—â–∞–µ–º core –º–æ–¥—É–ª—å
            if (this.core?.cleanup) {
                this.core.cleanup();
            }

            // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
            if (this.metricsInterval) {
                clearInterval(this.metricsInterval);
            }

            // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.eventHandlers.clear();

            // –û—á–∏—â–∞–µ–º –º–æ–¥—É–ª–∏
            this.modules.clear();

            // –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
            if (window.attackConstructor === this) {
                window.attackConstructor = null;
            }

            this.isInitialized = false;
            this.state.isActive = false;

            console.log('‚úÖ Cleanup completed');

        } catch (error) {
            console.error('‚ùå Error during cleanup:', error);
        }
    }

    // =======================================================
    // –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–ï–ú
    // =======================================================

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    _saveState() {
        try {
            const stateData = {
                version: this.version,
                timestamp: Date.now(),
                rule: this.core?.currentRule || null,
                nodes: this.core?.canvasNodes ? Array.from(this.core.canvasNodes.values()) : [],
                connections: this.core?.connections ? Array.from(this.core.connections.values()) : [],
                selectedTab: this.core?.currentTab || 'properties',
                hasUnsavedChanges: this.state.hasUnsavedChanges
            };

            localStorage.setItem('attack-constructor-state', JSON.stringify(stateData));
            console.log('üíæ State saved');

        } catch (error) {
            console.error('‚ùå Error saving state:', error);
        }
    }

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    _restoreState() {
        try {
            const savedState = localStorage.getItem('attack-constructor-state');
            if (!savedState) return;

            const stateData = JSON.parse(savedState);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
            const ageHours = (Date.now() - stateData.timestamp) / (1000 * 60 * 60);
            if (ageHours > 24) {
                console.log('‚è∞ Saved state too old, ignoring');
                return;
            }

            console.log('üîÑ Restoring saved state...');

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ core –º–æ–¥—É–ª–µ
            if (this.core && stateData.rule) {
                // –õ–æ–≥–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ core –º–æ–¥—É–ª—è
                console.log('üìã State restoration available');
            }

        } catch (error) {
            console.error('‚ùå Error restoring state:', error);
        }
    }

    // =======================================================
    // –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
    // =======================================================

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è beforeunload
     */
    _handleBeforeUnload(event) {
        if (this.state.hasUnsavedChanges) {
            const message = '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ü–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?';
            event.returnValue = message;
            return message;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è unload
     */
    _handleUnload() {
        this._saveState();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
     */
    _handleGlobalError(event) {
        if (event.filename && event.filename.includes('attack-constructor')) {
            console.error('‚ùå Global error in Attack Constructor:', event.error);

            // –¢–µ–ª–µ–º–µ—Ç—Ä–∏—è
            if (window.app?.telemetry?.logError) {
                window.app.telemetry.logError('attack-constructor-runtime-error', {
                    message: event.message,
                    filename: event.filename,
                    lineno: event.lineno,
                    colno: event.colno,
                    stack: event.error?.stack
                });
            }
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    _handleVisibilityChange() {
        if (document.hidden) {
            console.log('üëÅÔ∏è Page hidden - pausing activity');
            this._saveState();
        } else {
            console.log('üëÅÔ∏è Page visible - resuming activity');
            this.state.lastActivity = Date.now();
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    _handlePageCleanup() {
        console.log('üßπ Page cleanup triggered');
        this.cleanup();
    }

    _handlePageActivate() {
        console.log('üü¢ Page activate triggered');
        this.activate();
    }

    _handlePageDeactivate() {
        console.log('üü° Page deactivate triggered');
        this.deactivate();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
     */
    _setupKeyboardShortcuts() {
        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è core –º–æ–¥—É–ª–µ–º
        console.log('‚å®Ô∏è Keyboard shortcuts managed by core module');
    }

    // =======================================================
    // –°–ò–°–¢–ï–ú–ê –°–û–ë–´–¢–ò–ô
    // =======================================================

    on(event, handler) {
        if (!this.eventHandlers.has(event)) {
            this.eventHandlers.set(event, []);
        }
        this.eventHandlers.get(event).push(handler);
    }

    off(event, handler) {
        if (this.eventHandlers.has(event)) {
            const handlers = this.eventHandlers.get(event);
            const index = handlers.indexOf(handler);
            if (index > -1) {
                handlers.splice(index, 1);
            }
        }
    }

    emit(event, data) {
        if (this.eventHandlers.has(event)) {
            this.eventHandlers.get(event).forEach(handler => {
                try {
                    handler(data);
                } catch (error) {
                    console.error(`Error in event handler for ${event}:`, error);
                }
            });
        }
    }

    // =======================================================
    // –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –ú–ï–¢–û–î–´
    // =======================================================

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
     */
    _updateMetrics() {
        if (performance.memory) {
            this.performanceMetrics.memoryUsage = performance.memory.usedJSHeapSize;
        }

        if (this.core) {
            this.performanceMetrics.componentCount = this.core.canvasNodes?.size || 0;
            this.performanceMetrics.connectionCount = this.core.connections?.size || 0;
        }

        this.performanceMetrics.lastUpdate = Date.now();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–æ–¥—É–ª—è
     */
    getStatus() {
        return {
            version: this.version,
            isInitialized: this.isInitialized,
            isActive: this.state.isActive,
            modules: Array.from(this.modules.keys()),
            performance: this.performanceMetrics,
            core: this.core?.getDebugInfo?.() || null
        };
    }

    /**
     * –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∫ core –º–æ–¥—É–ª—é
     */
    _setupCoreProxy() {
        const coreMethods = [
            'validateRule',
            'saveSignatureRule',
            'loadRuleTemplate',
            'runRuleTest',
            'generateRuleOutput',
            'clearRuleCanvas',
            'autoLayoutRule'
        ];

        coreMethods.forEach(method => {
            this[method] = (...args) => {
                if (this.core && typeof this.core[method] === 'function') {
                    return this.core[method](...args);
                } else {
                    console.warn(`‚ö†Ô∏è Core method ${method} not available`);
                    return null;
                }
            };
        });
    }
}

// =======================================================
// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// =======================================================

/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Attack Constructor
 */
let attackConstructorInstance = null;

/**
 * –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Attack Constructor
 */
async function initAttackConstructor() {
    console.log('üöÄ Initializing Attack Constructor Main Module...');

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
        if (attackConstructorInstance) {
            console.log('‚úÖ Attack Constructor already initialized');
            return attackConstructorInstance;
        }

        // –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        attackConstructorInstance = new AttackConstructor();
        await attackConstructorInstance.initialize();

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ –º–µ—Ç–æ–¥—ã
        attackConstructorInstance._setupCoreProxy();

        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        window.attackConstructor = attackConstructorInstance;

        return attackConstructorInstance;

    } catch (error) {
        console.error('‚ùå Attack Constructor initialization failed:', error);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
        if (window.app?.showErrorNotification) {
            window.app.showErrorNotification(
                '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Å–∏–≥–Ω–∞—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
            );
        }

        throw error;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
 */
function waitForDOMReady() {
    return new Promise((resolve) => {
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', resolve);
        } else {
            resolve();
        }
    });
}

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
 */
(async () => {
    try {
        // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
        await waitForDOMReady();

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        await new Promise(resolve => setTimeout(resolve, 100));

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Attack Constructor
        await initAttackConstructor();

        console.log('üéâ Attack Constructor fully initialized and ready!');

    } catch (error) {
        console.error('üí• Critical initialization failure:', error);
    }
})();

// =======================================================
// –≠–ö–°–ü–û–†–¢–´ –ò –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø
// =======================================================

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        AttackConstructor,
        AttackConstructorModuleLoader,
        initAttackConstructor
    };
}

// ES6 —ç–∫—Å–ø–æ—Ä—Ç—ã
if (typeof window !== 'undefined' && window.moduleSystem === 'es6') {
    window.AttackConstructorExports = {
        AttackConstructor,
        AttackConstructorModuleLoader,
        initAttackConstructor
    };
}

// =======================================================
// BACKWARD COMPATIBILITY & LEGACY SUPPORT
// =======================================================

/**
 * –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –≤–µ—Ä—Å–∏—è–º–∏
 */
if (typeof window !== 'undefined') {
    // Alias –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
    window.SignatureConstructor = AttackConstructor;
    window.initSignatureConstructor = initAttackConstructor;

    // Event –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å legacy –∫–æ–¥–æ–º
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(() => {
            const legacyEvent = new CustomEvent('signatureConstructorModuleLoaded', {
                detail: {
                    version: '4.0.0-Enhanced-Main',
                    timestamp: Date.now(),
                    legacy: true
                }
            });
            document.dispatchEvent(legacyEvent);
        }, 500);
    });
}

// =======================================================
// –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø –ú–û–î–£–õ–Ø
// =======================================================

console.log('‚úÖ Attack Constructor Main Module v4.0.0-Enhanced loaded successfully');

/**
 * =======================================================
 * –ö–û–ù–ï–¶ –§–ê–ô–õ–ê attack-constructor.js
 * 
 * IP Roast Enterprise 4.0 - Attack Constructor Main Module
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
 * –í–µ—Ä—Å–∏—è: 4.0.0-Enhanced-Main
 * 
 * –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å lazy loading
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Enhanced PageManager
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 * - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–ª–∞–¥–∫–∞
 * - –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å legacy –∫–æ–¥–æ–º
 * - Enterprise-—É—Ä–æ–≤–µ–Ω—å –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç–∏
 * =======================================================
 */
