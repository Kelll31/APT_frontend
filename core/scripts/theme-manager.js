/**
 * core/scripts/theme-manager.js
 * ThemeManager ‚Äî –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏ –¥–ª—è IP Roast Enterprise 4.0
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ window.ThemeManager
 */

(function () {
    'use strict';

    class ThemeManager {
        constructor() {
            if (window.themeManagerInstance) {
                return window.themeManagerInstance;
            }
            this.currentTheme = 'light';
            this.themes = ['light', 'dark'];
            this.storageKey = 'ip-roast-theme';
            this.elements = {
                root: document.documentElement,
                toggleButton: null
            };
            this.eventListeners = new Map();
            this.isInitialized = false;
            this.isToggling = false;
            this.init();
        }

        /**
         * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º
         */
        init() {
            if (this.isInitialized) {
                console.log('‚ö†Ô∏è ThemeManager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                return;
            }
            console.log('üé® ThemeManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
            this.loadSavedTheme();
            this.findElements();
            this.setupEventListeners();
            this.applyTheme(this.currentTheme);
            this.isInitialized = true;
            console.log(`‚úÖ ThemeManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Ç–µ–º–æ–π: ${this.currentTheme}`);
        }

        /**
         * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
         */
        loadSavedTheme() {
            try {
                const savedTheme = localStorage.getItem(this.storageKey);
                if (savedTheme && this.themes.includes(savedTheme)) {
                    this.currentTheme = savedTheme;
                    console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Ç–µ–º–∞: ${savedTheme}`);
                } else {
                    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                    this.currentTheme = systemTheme;
                    console.log(`üñ•Ô∏è –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞: ${systemTheme}`);
                }
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º light:', error);
                this.currentTheme = 'light';
            }
        }

        /**
         * –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–æ–π
         */
        findElements() {
            const possibleIds = ['theme-toggle-btn', 'theme-toggle', 'dark-mode-toggle'];
            for (const id of possibleIds) {
                const element = document.getElementById(id);
                if (element) {
                    const oldHandler = element._themeToggleHandler;
                    if (oldHandler) {
                        element.removeEventListener('click', oldHandler);
                        delete element._themeToggleHandler;
                    }

                    this.elements.toggleButton = element;
                    console.log(`üîç –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã: #${id}`);
                    break;
                }
            }

            if (!this.elements.toggleButton) {
                console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }
        /**
         * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
         */
        setupEventListeners() {
            // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
            if (this.elements.toggleButton) {
                const handleToggle = (e) => {
                    e.preventDefault();
                    e.stopPropagation();

                    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
                    if (this.isToggling) {
                        console.log('‚è≥ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º...');
                        return;
                    }

                    this.toggleTheme();
                };

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ
                this.elements.toggleButton._themeToggleHandler = handleToggle;
                this.elements.toggleButton.addEventListener('click', handleToggle);
                console.log('üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            }

            // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
                if (!localStorage.getItem(this.storageKey)) {
                    const systemTheme = e.matches ? 'dark' : 'light';
                    console.log(`üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: ${systemTheme}`);
                    this.setTheme(systemTheme);
                }
            });

            // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
            document.addEventListener('keydown', (e) => {
                if (e.ctrlKey && e.shiftKey && e.key === 'T') {
                    e.preventDefault();
                    this.toggleTheme();
                }
            });

            console.log('‚ö° –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ç–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        }

        /**
         * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
         */
        applyTheme(theme) {
            if (!this.themes.includes(theme)) {
                console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞: ${theme}, –∏—Å–ø–æ–ª—å–∑—É–µ–º light`);
                theme = 'light';
            }

            console.log(`üé® –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É: ${theme}`);

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º data-theme –Ω–∞ html —ç–ª–µ–º–µ–Ω—Ç
            this.elements.root.setAttribute('data-theme', theme);
            this.elements.root.style.colorScheme = theme;

            if (theme === 'dark') {
                this.elements.root.classList.add('dark');
            } else {
                this.elements.root.classList.remove('dark');
            }

            // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
            document.body.removeAttribute('data-theme');

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
            this.updateToggleButton(theme);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
            this.saveTheme(theme);

            const previousTheme = this.currentTheme;
            this.currentTheme = theme;

            // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            this.emit('themeChanged', {
                theme,
                previous: previousTheme,
                timestamp: Date.now()
            });

            console.log(`‚úÖ –¢–µ–º–∞ ${theme} –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
        }

        /**
         * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
         */
        toggleTheme() {
            const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';
            console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã: ${this.currentTheme} ‚Üí ${newTheme}`);
            this.setTheme(newTheme);
        }

        /**
         * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º—ã
         */
        setTheme(theme) {
            this.applyTheme(theme);
        }

        /**
         * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
         */
        getCurrentTheme() {
            return this.currentTheme;
        }

        /**
         * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
         */
        updateToggleButton(theme) {
            if (!this.elements.toggleButton) return;

            const icons = {
                'light': 'üåô',
                'dark': '‚òÄÔ∏è'
            };

            const tooltips = {
                'light': '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É',
                'dark': '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É'
            };

            this.elements.toggleButton.textContent = icons[theme];
            this.elements.toggleButton.title = tooltips[theme];
            this.elements.toggleButton.setAttribute('aria-label', tooltips[theme]);
            this.elements.toggleButton.className = `header-btn theme-toggle theme-toggle--${theme}`;

            console.log(`üîò –ö–Ω–æ–ø–∫–∞ —Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${icons[theme]}`);
        }

        /**
         * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –≤ localStorage
         */
        saveTheme(theme) {
            try {
                localStorage.setItem(this.storageKey, theme);
                console.log(`üíæ –¢–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${theme}`);
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–º—ã:', error);
            }
        }

        /**
         * –°–∏—Å—Ç–µ–º–∞ —Å–æ–±—ã—Ç–∏–π
         */
        on(event, callback) {
            if (!this.eventListeners.has(event)) {
                this.eventListeners.set(event, []);
            }
            this.eventListeners.get(event).push(callback);
        }

        off(event, callback) {
            if (this.eventListeners.has(event)) {
                const listeners = this.eventListeners.get(event);
                const index = listeners.indexOf(callback);
                if (index > -1) {
                    listeners.splice(index, 1);
                }
            }
        }

        emit(event, data) {
            if (this.eventListeners.has(event)) {
                this.eventListeners.get(event).forEach(callback => {
                    try {
                        callback(data);
                    } catch (error) {
                        console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–±—ã—Ç–∏—è ${event}:`, error);
                    }
                });
            }

            // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ DOM —Å–æ–±—ã—Ç–∏–µ
            const customEvent = new CustomEvent('themeChanged', {
                detail: data
            });
            document.dispatchEvent(customEvent);
        }

        /**
         * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–º–µ
         */
        getThemeInfo() {
            return {
                current: this.currentTheme,
                available: this.themes,
                isSystemDark: window.matchMedia('(prefers-color-scheme: dark)').matches,
                hasCustomTheme: !!localStorage.getItem(this.storageKey),
                buttonFound: !!this.elements.toggleButton
            };
        }

        /**
         * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º
         */
        destroy() {
            this.eventListeners.clear();
            console.log('üóëÔ∏è ThemeManager —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
        }
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
    window.ThemeManager = ThemeManager;
    console.log('üé® ThemeManager –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ window.ThemeManager');

})();
