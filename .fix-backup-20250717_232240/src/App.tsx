import React, { Suspense, useEffect, useState, useCallback } from 'react'
import { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom'
import { ErrorBoundary } from 'react-error-boundary'

// Layout –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import Layout from './components/layout/Layout'
import Header from './components/layout/Header'
import Footer from './components/layout/Footer'

// –°—Ç—Ä–∞–Ω–∏—Ü—ã
import HomePage from './pages/HomePage'
import ScannerPage from './pages/ScannerPage'
import ReconPage from './pages/ReconPage'
import ReportsPage from './pages/ReportsPage'
import SettingsPage from './pages/SettingsPage'
import NotFoundPage from './pages/NotFoundPage'

// –û–±—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import LoadingSpinner from './components/common/LoadingSpinner'
import ErrorFallback from './components/common/ErrorFallback'
import Toast from './components/common/Toast'

// –•—É–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
import { useTheme } from './hooks/useTheme'
import { useNotifications } from './hooks/useNotifications'
import { useWebSocket } from './hooks/useWebSocket'
import { useLocalStorage } from './hooks/useLocalStorage'

// –°–µ—Ä–≤–∏—Å—ã
import { initializeServices } from './services/api'
import { validateEnvironment } from './utils/validators'
import { ErrorLogger } from './utils/helpers'

// –¢–∏–ø—ã
import type { AppState, User, ScanStatus } from './types/api'

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const ROUTES = {
    HOME: '/',
    SCANNER: '/scanner',
    RECON: '/recon',
    REPORTS: '/reports',
    SETTINGS: '/settings'
} as const;

const STORAGE_KEYS = {
    LAST_ROUTE: 'lastRoute',
    USER_PREFERENCES: 'userPreferences',
    APP_STATE: 'appState'
} as const;

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
interface AppContextValue {
    isInitialized: boolean;
    isLoading: boolean;
    user: User | null;
    currentScan: ScanStatus | null;
    appVersion: string;
    buildInfo: {
        version: string;
        buildTime: string;
        gitHash: string;
    };
}

// –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const AppContext = React.createContext<AppContextValue | null>(null);

export const useApp = () => {
    const context = React.useContext(AppContext);
    if (!context) {
        throw new Error('useApp must be used within AppProvider');
    }
    return context;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
const RouteRestore: React.FC<{ children: React.ReactNode }> = ({ children }) => {
    const location = useLocation();
    const [lastRoute, setLastRoute] = useLocalStorage(STORAGE_KEYS.LAST_ROUTE, ROUTES.HOME);

    useEffect(() => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç
        if (location.pathname !== lastRoute) {
            setLastRoute(location.pathname);
        }
    }, [location.pathname, lastRoute, setLastRoute]);

    return <>{children}</>;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const AppLoader: React.FC = () => (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center">
        <div className="text-center space-y-6">
            <div className="inline-flex items-center justify-center w-20 h-20 bg-blue-600 rounded-2xl shadow-lg">
                <svg
                    className="w-10 h-10 text-white animate-pulse"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                    />
                </svg>
            </div>
            <div className="space-y-2">
                <h2 className="text-xl font-semibold text-gray-900 dark:text-gray-100">
                    –ó–∞–≥—Ä—É–∑–∫–∞ IP Roast
                </h2>
                <p className="text-gray-600 dark:text-gray-400">
                    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...
                </p>
            </div>
            <LoadingSpinner size="lg" />
        </div>
    </div>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const AppRoutes: React.FC = () => {
    const { notifications } = useNotifications();

    return (
        <Routes>
            {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å–∫–∞–Ω–µ—Ä */}
            <Route path={ROUTES.HOME} element={<Navigate to={ROUTES.SCANNER} replace />} />

            {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
            <Route
                path={ROUTES.SCANNER}
                element={
                    <Suspense fallback={<LoadingSpinner />}>
                        <ScannerPage />
                    </Suspense>
                }
            />

            <Route
                path={ROUTES.RECON}
                element={
                    <Suspense fallback={<LoadingSpinner />}>
                        <ReconPage />
                    </Suspense>
                }
            />

            <Route
                path={ROUTES.REPORTS}
                element={
                    <Suspense fallback={<LoadingSpinner />}>
                        <ReportsPage />
                    </Suspense>
                }
            />

            <Route
                path={ROUTES.SETTINGS}
                element={
                    <Suspense fallback={<LoadingSpinner />}>
                        <SettingsPage />
                    </Suspense>
                }
            />

            {/* 404 —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
            <Route path="*" element={<NotFoundPage />} />
        </Routes>
    );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const App: React.FC = () => {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const [appState, setAppState] = useState<AppState>({
        isInitialized: false,
        isLoading: true,
        hasError: false,
        user: null,
        currentScan: null
    });

    // –•—É–∫–∏
    const { theme, toggleTheme, setTheme } = useTheme();
    const { notifications, addNotification, removeNotification } = useNotifications();
    const { isConnected: wsConnected, connectionStatus } = useWebSocket();

    // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const [userPreferences, setUserPreferences] = useLocalStorage(STORAGE_KEYS.USER_PREFERENCES, {
        theme: 'auto',
        notifications: true,
        autoSave: true,
        language: 'ru'
    });

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ
    const buildInfo = {
        version: import.meta.env.VITE_APP_VERSION || '2.1.0',
        buildTime: import.meta.env.VITE_BUILD_TIME || new Date().toISOString(),
        gitHash: import.meta.env.VITE_GIT_HASH || 'unknown'
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const initializeApp = useCallback(async () => {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è IP Roast App...');

            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –±—Ä–∞—É–∑–µ—Ä–∞
            const environmentCheck = validateEnvironment();
            if (!environmentCheck.isSupported) {
                throw new Error(`–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: ${environmentCheck.missing.join(', ')}`);
            }

            // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            await initializeServices({
                apiUrl: import.meta.env.VITE_API_URL || 'http://localhost:5000',
                wsUrl: import.meta.env.VITE_WS_URL || 'http://localhost:5000',
                enableDevMode: import.meta.env.DEV
            });

            // 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            if (userPreferences.theme && userPreferences.theme !== theme) {
                setTheme(userPreferences.theme);
            }

            // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            const activeScanId = localStorage.getItem('activeScanId');
            if (activeScanId) {
                console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${activeScanId}`);
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            }

            // 5. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            setAppState(prev => ({
                ...prev,
                isInitialized: true,
                isLoading: false,
                hasError: false
            }));

            // 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            addNotification({
                type: 'success',
                title: 'IP Roast –≥–æ—Ç–æ–≤',
                message: '–°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ',
                duration: 3000
            });

            console.log('‚úÖ IP Roast App —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);

            setAppState(prev => ({
                ...prev,
                isLoading: false,
                hasError: true
            }));

            addNotification({
                type: 'error',
                title: '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏',
                message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
                duration: 0 // –ù–µ —Å–∫—Ä—ã–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            });

            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            ErrorLogger.logError(error, 'APP_INITIALIZATION');
        }
    }, [theme, setTheme, userPreferences, addNotification]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const handleAppError = useCallback((error: Error, errorInfo: any) => {
        console.error('üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error, errorInfo);

        ErrorLogger.logError(error, 'APP_CRITICAL', {
            componentStack: errorInfo.componentStack,
            buildInfo,
            userAgent: navigator.userAgent,
            timestamp: new Date().toISOString()
        });

        addNotification({
            type: 'error',
            title: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞',
            message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
            duration: 0
        });
    }, [addNotification, buildInfo]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
    const handleErrorReset = useCallback(() => {
        setAppState(prev => ({
            ...prev,
            hasError: false,
            isLoading: true
        }));

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        setTimeout(initializeApp, 1000);
    }, [initializeApp]);

    // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    const contextValue: AppContextValue = {
        isInitialized: appState.isInitialized,
        isLoading: appState.isLoading,
        user: appState.user,
        currentScan: appState.currentScan,
        appVersion: buildInfo.version,
        buildInfo
    };

    // –≠—Ñ—Ñ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    useEffect(() => {
        initializeApp();
    }, [initializeApp]);

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
    useEffect(() => {
        const handleKeyboard = (event: KeyboardEvent) => {
            // Ctrl/Cmd + Shift + D - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
            if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'D') {
                event.preventDefault();
                toggleTheme();
            }

            // Ctrl/Cmd + K - —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–∏—Å–∫
            if ((event.ctrlKey || event.metaKey) && event.key === 'k') {
                event.preventDefault();
                const targetInput = document.getElementById('targetInput') as HTMLInputElement;
                if (targetInput) {
                    targetInput.focus();
                    targetInput.select();
                }
            }
        };

        document.addEventListener('keydown', handleKeyboard);
        return () => document.removeEventListener('keydown', handleKeyboard);
    }, [toggleTheme]);

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    useEffect(() => {
        const handleVisibilityChange = () => {
            if (document.visibilityState === 'visible') {
                console.log('üëÅÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ–π');
                // –ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            } else {
                console.log('ü´• –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞');
            }
        };

        document.addEventListener('visibilitychange', handleVisibilityChange);
        return () => document.removeEventListener('visibilitychange', handleVisibilityChange);
    }, []);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    useEffect(() => {
        setUserPreferences(prev => ({
            ...prev,
            theme
        }));
    }, [theme, setUserPreferences]);

    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è WebSocket
    useEffect(() => {
        if (wsConnected) {
            console.log('üåê WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω');
        } else {
            console.log('üîå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω');
        }
    }, [wsConnected]);

    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
    if (appState.hasError) {
        return (
            <AppContext.Provider value={contextValue}>
                <ErrorFallback
                    error={new Error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')}
                    resetError={handleErrorReset}
                    buildInfo={buildInfo}
                />
            </AppContext.Provider>
        );
    }

    // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
    if (appState.isLoading || !appState.isInitialized) {
        return <AppLoader />;
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    return (
        <ErrorBoundary
            FallbackComponent={ErrorFallback}
            onError={handleAppError}
            onReset={handleErrorReset}
        >
            <AppContext.Provider value={contextValue}>
                <Router>
                    <RouteRestore>
                        <div
                            className="min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200"
                            data-theme={theme}
                        >
                            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                            <Header
                                wsConnected={wsConnected}
                                connectionStatus={connectionStatus}
                                currentScan={appState.currentScan}
                            />

                            {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
                            <main className="flex-1">
                                <Layout>
                                    <Suspense fallback={
                                        <div className="flex items-center justify-center min-h-96">
                                            <LoadingSpinner size="lg" />
                                        </div>
                                    }>
                                        <AppRoutes />
                                    </Suspense>
                                </Layout>
                            </main>

                            {/* –§—É—Ç–µ—Ä */}
                            <Footer buildInfo={buildInfo} />

                            {/* –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
                            <div className="fixed bottom-4 right-4 z-50 space-y-2">
                                {notifications.map(notification => (
                                    <Toast
                                        key={notification.id}
                                        {...notification}
                                        onClose={() => removeNotification(notification.id)}
                                    />
                                ))}
                            </div>

                            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è WebSocket */}
                            {!wsConnected && (
                                <div className="fixed top-16 right-4 z-40">
                                    <div className="bg-yellow-100 dark:bg-yellow-900 border border-yellow-400 dark:border-yellow-600 text-yellow-800 dark:text-yellow-200 px-3 py-2 rounded-lg shadow-lg text-sm">
                                        <div className="flex items-center space-x-2">
                                            <div className="w-2 h-2 bg-yellow-500 rounded-full animate-pulse"></div>
                                            <span>–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...</span>
                                        </div>
                                    </div>
                                </div>
                            )}

                            {/* Debug –ø–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ */}
                            {import.meta.env.DEV && (
                                <div className="fixed bottom-4 left-4 z-50">
                                    <div className="bg-black bg-opacity-75 text-white text-xs p-2 rounded font-mono">
                                        <div>WS: {wsConnected ? 'üü¢' : 'üî¥'}</div>
                                        <div>Theme: {theme}</div>
                                        <div>Build: {buildInfo.version}</div>
                                    </div>
                                </div>
                            )}
                        </div>
                    </RouteRestore>
                </Router>
            </AppContext.Provider>
        </ErrorBoundary>
    );
};

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export { AppContext };

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default App;
