import React from 'react'
import ReactDOM from 'react-dom/client'
import { ErrorBoundary } from 'react-error-boundary'

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import App from './App.tsx'

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
import './styles/globals.css'
import './styles/variables.css'
import './styles/components.css'
import './styles/themes/light.css'
import './styles/themes/dark.css'
import './styles/themes/auto.css'

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
import { ThemeProvider } from './stores/themeStore'
import { NotificationProvider } from './stores/notificationStore.js'
import { SettingsProvider } from './stores/settingsStore.js'

// –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ —Å–µ—Ä–≤–∏—Å—ã
import { initializeIPRoastCore } from './utils/core-initializer'
import { validateEnvironment } from './utils/validators'
import { ErrorFallback } from './components/common/ErrorFallback'

// –¢–∏–ø—ã
interface IPRoastWindow extends Window {
    __IP_ROAST_CONFIG__: {
        version: string;
        build: string;
        api: {
            baseUrl: string;
            timeout: number;
        };
        websocket: {
            url: string;
            namespace: string;
        };
        features: {
            notifications: boolean;
            analytics: boolean;
            errorReporting: boolean;
            performance: boolean;
        };
    };
    __BROWSER_SUPPORT__: {
        webSockets: boolean;
        localStorage: boolean;
        sessionStorage: boolean;
        fetch: boolean;
        promises: boolean;
        modules: boolean;
        intersectionObserver: boolean;
        resizeObserver: boolean;
    };
    hideInitialLoading?: () => void;
}

declare const window: IPRoastWindow;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const APP_CONFIG = {
    version: '2.1.0',
    appName: 'IP Roast',
    environment: import.meta.env.MODE,
    apiUrl: import.meta.env.VITE_API_URL || 'http://localhost:5000',
    wsUrl: import.meta.env.VITE_WS_URL || 'http://localhost:5000',
    enableDevTools: import.meta.env.DEV,
    performance: {
        enableMetrics: true,
        trackUserInteractions: false,
        trackErrors: true
    }
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫ React
 */
function handleReactError(error: Error, errorInfo: { componentStack: string }) {
    console.error('üö® React Error Boundary:', error, errorInfo);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –≤ —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)
    if (APP_CONFIG.performance.trackErrors) {
        try {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Sentry, LogRocket, etc.
            const errorData = {
                message: error.message,
                stack: error.stack,
                componentStack: errorInfo.componentStack,
                timestamp: new Date().toISOString(),
                userAgent: navigator.userAgent,
                url: window.location.href,
                version: APP_CONFIG.version
            };

            console.error('üìä Error Analytics Data:', errorData);
        } catch (analyticsError) {
            console.warn('‚ö†Ô∏è Failed to send error analytics:', analyticsError);
        }
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */
function initializePerformanceMonitoring() {
    if (!APP_CONFIG.performance.enableMetrics) return;

    // Core Web Vitals monitoring
    if ('PerformanceObserver' in window) {
        try {
            // Largest Contentful Paint (LCP)
            const lcpObserver = new PerformanceObserver((list) => {
                for (const entry of list.getEntries()) {
                    console.log('üìä LCP:', entry);
                }
            });
            lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });

            // Cumulative Layout Shift (CLS)
            const clsObserver = new PerformanceObserver((list) => {
                for (const entry of list.getEntries()) {
                    if (!(entry as any).hadRecentInput) {
                        console.log('üìä CLS:', entry);
                    }
                }
            });
            clsObserver.observe({ entryTypes: ['layout-shift'] });

            // First Input Delay (FID)
            const fidObserver = new PerformanceObserver((list) => {
                for (const entry of list.getEntries()) {
                    console.log('üìä FID:', entry);
                }
            });
            fidObserver.observe({ entryTypes: ['first-input'] });

        } catch (error) {
            console.warn('‚ö†Ô∏è Performance monitoring setup failed:', error);
        }
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º
 */
function initializeThemeSystem() {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º...');

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        const savedTheme = localStorage.getItem('theme') || 'auto';
        const savedAccent = localStorage.getItem('accent') || 'blue';
        const savedSize = localStorage.getItem('interfaceSize') || 'medium';
        const savedHighContrast = localStorage.getItem('highContrast') === 'true';

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É
        document.documentElement.setAttribute('data-theme', savedTheme);
        document.documentElement.setAttribute('data-accent', savedAccent);
        document.documentElement.setAttribute('data-size', savedSize);
        document.documentElement.setAttribute('data-high-contrast', savedHighContrast.toString());

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º—ã
        if (savedTheme === 'auto') {
            const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
            const updateAutoTheme = () => {
                const actualTheme = mediaQuery.matches ? 'dark' : 'light';
                document.documentElement.setAttribute('data-auto-theme', actualTheme);
            };

            updateAutoTheme();
            mediaQuery.addEventListener('change', updateAutoTheme);
        }

        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º:', error);
        // Fallback –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É
        document.documentElement.setAttribute('data-theme', 'light');
        document.documentElement.setAttribute('data-accent', 'blue');
        document.documentElement.setAttribute('data-size', 'medium');
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
 */
function initializeKeyboardShortcuts() {
    console.log('‚å®Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à...');

    document.addEventListener('keydown', (event) => {
        // Ctrl/Cmd + K - –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞/—Ü–µ–ª–∏
        if ((event.ctrlKey || event.metaKey) && event.key === 'k') {
            event.preventDefault();
            const targetInput = document.querySelector('#targetInput') as HTMLInputElement;
            if (targetInput) {
                targetInput.focus();
                targetInput.select();
            }
        }

        // Ctrl/Cmd + Enter - –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {
            event.preventDefault();
            const startButton = document.querySelector('#startScanBtn') as HTMLButtonElement;
            if (startButton && !startButton.disabled) {
                startButton.click();
            }
        }

        // Escape - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        if (event.key === 'Escape') {
            const stopButton = document.querySelector('#stopScanBtn') as HTMLButtonElement;
            if (stopButton && !stopButton.disabled) {
                stopButton.click();
            }
        }

        // Ctrl/Cmd + Shift + D - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
        if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'D') {
            event.preventDefault();
            const currentTheme = localStorage.getItem('theme') || 'auto';
            const themes = ['light', 'dark', 'auto'];
            const currentIndex = themes.indexOf(currentTheme);
            const nextTheme = themes[(currentIndex + 1) % themes.length];

            localStorage.setItem('theme', nextTheme);
            document.documentElement.setAttribute('data-theme', nextTheme);

            console.log(`üåì –¢–µ–º–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞: ${nextTheme}`);
        }
    });

    console.log('‚úÖ –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Service Worker –¥–ª—è PWA
 */
async function initializeServiceWorker() {
    if ('serviceWorker' in navigator && import.meta.env.PROD) {
        try {
            console.log('üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker...');

            const registration = await navigator.serviceWorker.register('/sw.js', {
                scope: '/'
            });

            console.log('‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration.scope);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            registration.addEventListener('updatefound', () => {
                const newWorker = registration.installing;
                if (newWorker) {
                    newWorker.addEventListener('statechange', () => {
                        if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                            // –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
                            console.log('üÜï –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞');

                            // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            const event = new CustomEvent('sw-update-available', {
                                detail: { registration }
                            });
                            window.dispatchEvent(event);
                        }
                    });
                }
            });

        } catch (error) {
            console.warn('‚ö†Ô∏è Service Worker —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error);
        }
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
 */
function initializeGlobalEventHandlers() {
    console.log('üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('visibilitychange', () => {
        if (document.visibilityState === 'visible') {
            console.log('üëÅÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ–π');
            // –ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ —Ç.–¥.
            window.dispatchEvent(new CustomEvent('page-visible'));
        } else {
            console.log('ü´• –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞');
            window.dispatchEvent(new CustomEvent('page-hidden'));
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
    window.addEventListener('online', () => {
        console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        window.dispatchEvent(new CustomEvent('connection-restored'));
    });

    window.addEventListener('offline', () => {
        console.log('üì¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
        window.dispatchEvent(new CustomEvent('connection-lost'));
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', (event) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        const isScanning = localStorage.getItem('activeScanId');
        if (isScanning) {
            event.preventDefault();
            event.returnValue = '–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?';
            return event.returnValue;
        }
    });

    console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
async function initializeApplication() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è IP Roast v' + APP_CONFIG.version);

    try {
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
        const browserSupport = validateEnvironment();
        if (!browserSupport.isSupported) {
            console.error('‚ùå –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', browserSupport.missing);
            throw new Error(`–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${browserSupport.missing.join(', ')}`);
        }

        // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã
        initializeThemeSystem();
        initializeKeyboardShortcuts();
        initializeGlobalEventHandlers();
        initializePerformanceMonitoring();

        // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã IP Roast
        await initializeIPRoastCore({
            apiUrl: APP_CONFIG.apiUrl,
            wsUrl: APP_CONFIG.wsUrl,
            enableDevTools: APP_CONFIG.enableDevTools
        });

        // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Service Worker
        await initializeServiceWorker();

        console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        return true;

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        throw error;
    }
}

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
 */
const IPRoastApp: React.FC = () => {
    return (
        <ErrorBoundary
            FallbackComponent={ErrorFallback}
            onError={handleReactError}
            onReset={() => {
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –æ—à–∏–±–∫–∏
                window.location.reload();
            }}
        >
            <React.StrictMode>
                <ThemeProvider>
                    <SettingsProvider>
                        <NotificationProvider>
                            <App />
                        </NotificationProvider>
                    </SettingsProvider>
                </ThemeProvider>
            </React.StrictMode>
        </ErrorBoundary>
    );
};

/**
 * –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
async function bootstrap() {
    try {
        console.log('üéØ –ó–∞–ø—É—Å–∫ IP Roast Bootstrap...');

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
        const rootElement = document.getElementById('root');
        if (!rootElement) {
            throw new Error('–ö–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç #root –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        await initializeApplication();

        // –°–æ–∑–¥–∞–µ–º React root –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        const root = ReactDOM.createRoot(rootElement);

        root.render(<IPRoastApp />);

        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(() => {
            if (window.hideInitialLoading) {
                window.hideInitialLoading();
            }
        }, 500);

        console.log('üéâ IP Roast —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        window.dispatchEvent(new CustomEvent('ip-roast-ready', {
            detail: {
                version: APP_CONFIG.version,
                environment: APP_CONFIG.environment,
                timestamp: new Date().toISOString()
            }
        }));

    } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback UI
        const rootElement = document.getElementById('root');
        if (rootElement) {
            rootElement.innerHTML = `
        <div style="
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          min-height: 100vh;
          padding: 2rem;
          text-align: center;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
          background: #f8fafc;
          color: #1f2937;
        ">
          <div style="
            background: white;
            padding: 3rem;
            border-radius: 1rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 100%;
          ">
            <div style="font-size: 4rem; margin-bottom: 1rem;">üö®</div>
            <h1 style="margin: 0 0 1rem 0; font-size: 1.5rem; font-weight: 600;">
              –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IP Roast
            </h1>
            <p style="margin: 0 0 2rem 0; color: #6b7280; line-height: 1.6;">
              –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. 
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
            </p>
            <details style="text-align: left; margin-bottom: 2rem;">
              <summary style="cursor: pointer; color: #dc2626; font-weight: 500;">
                –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </summary>
              <pre style="
                margin-top: 1rem;
                padding: 1rem;
                background: #f3f4f6;
                border-radius: 0.5rem;
                font-size: 0.75rem;
                overflow: auto;
                color: #374151;
              ">${error.message}\n\n${error.stack || 'Stack trace –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</pre>
            </details>
            <button 
              onclick="window.location.reload()"
              style="
                background: #2563eb;
                color: white;
                border: none;
                padding: 0.75rem 2rem;
                border-radius: 0.5rem;
                font-weight: 500;
                cursor: pointer;
                transition: background 0.2s;
              "
              onmouseover="this.style.background='#1d4ed8'"
              onmouseout="this.style.background='#2563eb'"
            >
              üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </div>
        </div>
      `;
        }

        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        if (window.hideInitialLoading) {
            window.hideInitialLoading();
        }
    }
}

// –ó–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', bootstrap);
} else {
    bootstrap();
}

// Hot Module Replacement –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (import.meta.hot) {
    import.meta.hot.accept('./App.tsx', () => {
        console.log('üî• HMR: App –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω');
    });

    import.meta.hot.accept('./stores/themeStore', () => {
        console.log('üî• HMR: Theme store –æ–±–Ω–æ–≤–ª–µ–Ω');
    });

    import.meta.hot.accept('./stores/notificationStore', () => {
        console.log('üî• HMR: Notification store –æ–±–Ω–æ–≤–ª–µ–Ω');
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ DevTools
if (APP_CONFIG.enableDevTools) {
    (window as any).__IP_ROAST_DEBUG__ = {
        config: APP_CONFIG,
        version: APP_CONFIG.version,
        environment: APP_CONFIG.environment,
        reloadApp: () => window.location.reload(),
        clearStorage: () => {
            localStorage.clear();
            sessionStorage.clear();
            console.log('üßπ Storage –æ—á–∏—â–µ–Ω');
        },
        exportLogs: () => {
            const logs = JSON.stringify({
                config: APP_CONFIG,
                localStorage: { ...localStorage },
                sessionStorage: { ...sessionStorage },
                timestamp: new Date().toISOString()
            }, null, 2);

            const blob = new Blob([logs], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `ip-roast-debug-${Date.now()}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }
    };

    console.log('üõ†Ô∏è Debug —É—Ç–∏–ª–∏—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∫–∞–∫ __IP_ROAST_DEBUG__');
}
