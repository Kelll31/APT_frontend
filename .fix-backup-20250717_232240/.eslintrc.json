{
    "root": true,
    "env": {
        "browser": true,
        "es2022": true,
        "node": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "@typescript-eslint/recommended",
        "@typescript-eslint/recommended-requiring-type-checking",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:react-hooks/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:security/recommended",
        "plugin:sonarjs/recommended",
        "plugin:@typescript-eslint/strict"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        },
        "project": [
            "./tsconfig.json",
            "./tsconfig.node.json"
        ],
        "tsconfigRootDir": "."
    },
    "plugins": [
        "@typescript-eslint",
        "react",
        "react-hooks",
        "react-refresh",
        "jsx-a11y",
        "import",
        "security",
        "sonarjs",
        "prefer-arrow"
    ],
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": [
                    "./tsconfig.json",
                    "./tsconfig.node.json"
                ]
            },
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        },
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        }
    },
    "rules": {
        // ===== TYPESCRIPT ПРАВИЛА =====
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_",
                "destructuredArrayIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/restrict-template-expressions": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/ban-ts-comment": [
            "error",
            {
                "ts-expect-error": "allow-with-description",
                "ts-ignore": "allow-with-description",
                "ts-nocheck": "allow-with-description",
                "ts-check": false
            }
        ],
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "disallowTypeAnnotations": false
            }
        ],
        "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface"
        ],
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array-simple"
            }
        ],
        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": [
                    "signature",
                    "field",
                    "constructor",
                    "method"
                ]
            }
        ],
        // ===== REACT ПРАВИЛА =====
        "react/react-in-jsx-scope": "off",
        "react/prop-types": "off",
        "react/jsx-uses-react": "off",
        "react/jsx-uses-vars": "error",
        "react/jsx-no-target-blank": "error",
        "react/jsx-key": [
            "error",
            {
                "checkFragmentShorthand": true,
                "checkKeyMustBeforeSpread": true,
                "warnOnDuplicates": true
            }
        ],
        "react/jsx-curly-brace-presence": [
            "error",
            {
                "props": "never",
                "children": "never"
            }
        ],
        "react/jsx-boolean-value": [
            "error",
            "never"
        ],
        "react/jsx-fragments": [
            "error",
            "syntax"
        ],
        "react/jsx-no-useless-fragment": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-sort-props": [
            "error",
            {
                "callbacksLast": true,
                "shorthandFirst": true,
                "reservedFirst": true
            }
        ],
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": true
            }
        ],
        "react/void-dom-elements-no-children": "error",
        "react/no-array-index-key": "warn",
        "react/no-unstable-nested-components": "error",
        "react/function-component-definition": [
            "error",
            {
                "namedComponents": "arrow-function",
                "unnamedComponents": "arrow-function"
            }
        ],
        // ===== REACT HOOKS ПРАВИЛА =====
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        // ===== REACT REFRESH ПРАВИЛА =====
        "react-refresh/only-export-components": [
            "warn",
            {
                "allowConstantExport": true
            }
        ],
        // ===== ACCESSIBILITY ПРАВИЛА =====
        "jsx-a11y/alt-text": "error",
        "jsx-a11y/anchor-has-content": "error",
        "jsx-a11y/aria-role": "error",
        "jsx-a11y/img-redundant-alt": "error",
        "jsx-a11y/no-access-key": "error",
        "jsx-a11y/no-autofocus": "warn",
        "jsx-a11y/click-events-have-key-events": "warn",
        "jsx-a11y/no-static-element-interactions": "warn",
        "jsx-a11y/anchor-is-valid": [
            "error",
            {
                "components": [
                    "Link"
                ],
                "specialLink": [
                    "to"
                ]
            }
        ],
        // ===== IMPORT ПРАВИЛА =====
        "import/order": [
            "error",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "index",
                    "object",
                    "type"
                ],
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "external",
                        "position": "before"
                    },
                    {
                        "pattern": "@/**",
                        "group": "internal",
                        "position": "before"
                    }
                ],
                "pathGroupsExcludedImportTypes": [
                    "react"
                ],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        "import/no-unresolved": "error",
        "import/no-cycle": "error",
        "import/no-unused-modules": "warn",
        "import/no-deprecated": "warn",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": [
                    "**/*.test.*",
                    "**/*.spec.*",
                    "**/*.stories.*",
                    "**/test/**",
                    "**/tests/**",
                    "**/spec/**",
                    "**/__tests__/**",
                    "vite.config.*",
                    "vitest.config.*",
                    "cypress.config.*",
                    "playwright.config.*"
                ]
            }
        ],
        "import/prefer-default-export": "off",
        "import/no-default-export": "off",
        "import/no-anonymous-default-export": "warn",
        // ===== БЕЗОПАСНОСТЬ ПРАВИЛА =====
        "security/detect-object-injection": "warn",
        "security/detect-non-literal-fs-filename": "warn",
        "security/detect-unsafe-regex": "error",
        "security/detect-buffer-noassert": "error",
        "security/detect-child-process": "warn",
        "security/detect-disable-mustache-escape": "error",
        "security/detect-eval-with-expression": "error",
        "security/detect-no-csrf-before-method-override": "error",
        "security/detect-non-literal-regexp": "warn",
        "security/detect-non-literal-require": "warn",
        "security/detect-possible-timing-attacks": "warn",
        "security/detect-pseudoRandomBytes": "error",
        // ===== SONARJS ПРАВИЛА =====
        "sonarjs/cognitive-complexity": [
            "error",
            15
        ],
        "sonarjs/max-switch-cases": [
            "error",
            30
        ],
        "sonarjs/no-all-duplicated-branches": "error",
        "sonarjs/no-element-overwrite": "error",
        "sonarjs/no-empty-collection": "error",
        "sonarjs/no-extra-arguments": "error",
        "sonarjs/no-identical-conditions": "error",
        "sonarjs/no-identical-expressions": "error",
        "sonarjs/no-ignored-return": "error",
        "sonarjs/no-one-iteration-loop": "error",
        "sonarjs/no-redundant-boolean": "error",
        "sonarjs/no-unused-collection": "error",
        "sonarjs/no-useless-catch": "error",
        "sonarjs/prefer-immediate-return": "error",
        "sonarjs/prefer-object-literal": "error",
        "sonarjs/prefer-single-boolean-return": "error",
        // ===== ОБЩИЕ ПРАВИЛА =====
        "no-console": [
            "warn",
            {
                "allow": [
                    "warn",
                    "error"
                ]
            }
        ],
        "no-debugger": "error",
        "no-alert": "error",
        "no-eval": "error",
        "no-implied-eval": "error",
        "no-new-func": "error",
        "no-script-url": "error",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-arrow-callback": "error",
        "arrow-body-style": [
            "error",
            "as-needed"
        ],
        "object-shorthand": [
            "error",
            "always"
        ],
        "prefer-template": "error",
        "template-curly-spacing": "error",
        "prefer-destructuring": [
            "error",
            {
                "object": true,
                "array": false
            }
        ],
        "no-nested-ternary": "error",
        "no-unneeded-ternary": "error",
        "no-mixed-operators": "error",
        "yoda": "error",
        "curly": [
            "error",
            "all"
        ],
        "eqeqeq": [
            "error",
            "always"
        ],
        "no-else-return": "error",
        "no-lonely-if": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "require-await": "off",
        "no-throw-literal": "error",
        "prefer-promise-reject-errors": "error",
        "no-param-reassign": [
            "error",
            {
                "props": false
            }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        // ===== СТИЛИСТИЧЕСКИЕ ПРАВИЛА =====
        "indent": "off",
        "@typescript-eslint/indent": "off",
        "quotes": "off",
        "@typescript-eslint/quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "semi": "off",
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": [
            "error",
            "never"
        ],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": "error",
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "object-curly-spacing": "off",
        "@typescript-eslint/object-curly-spacing": [
            "error",
            "always"
        ],
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": "error",
        "space-infix-ops": "off",
        "@typescript-eslint/space-infix-ops": "error",
        "brace-style": "off",
        "@typescript-eslint/brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        // ===== СПЕЦИФИЧНЫЕ ДЛЯ IP ROAST ПРАВИЛА =====
        "max-len": [
            "error",
            {
                "code": 120,
                "tabWidth": 2,
                "ignoreUrls": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreRegExpLiterals": true
            }
        ],
        "max-lines": [
            "warn",
            {
                "max": 500,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "max-lines-per-function": [
            "warn",
            {
                "max": 100,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "complexity": [
            "warn",
            10
        ],
        "max-depth": [
            "error",
            4
        ],
        "max-nested-callbacks": [
            "error",
            4
        ],
        "max-params": [
            "warn",
            5
        ]
    },
    "overrides": [
        {
            "files": [
                "*.js",
                "*.jsx"
            ],
            "rules": {
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/explicit-function-return-type": "off"
            }
        },
        {
            "files": [
                "*.test.*",
                "*.spec.*",
                "**/__tests__/**/*"
            ],
            "env": {
                "jest": true
            },
            "rules": {
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-non-null-assertion": "off",
                "sonarjs/no-duplicate-string": "off",
                "max-lines-per-function": "off"
            }
        },
        {
            "files": [
                "*.stories.*"
            ],
            "rules": {
                "import/no-anonymous-default-export": "off",
                "@typescript-eslint/no-explicit-any": "off"
            }
        },
        {
            "files": [
                "vite.config.*",
                "vitest.config.*",
                "*.config.*"
            ],
            "rules": {
                "import/no-default-export": "off",
                "@typescript-eslint/no-var-requires": "off"
            }
        },
        {
            "files": [
                "src/types/**/*"
            ],
            "rules": {
                "@typescript-eslint/no-empty-interface": "off",
                "@typescript-eslint/ban-types": "off"
            }
        },
        {
            "files": [
                "src/services/**/*"
            ],
            "rules": {
                "sonarjs/cognitive-complexity": [
                    "error",
                    20
                ],
                "max-lines-per-function": [
                    "warn",
                    {
                        "max": 150
                    }
                ]
            }
        },
        {
            "files": [
                "src/stores/**/*"
            ],
            "rules": {
                "@typescript-eslint/no-explicit-any": "warn",
                "sonarjs/cognitive-complexity": [
                    "error",
                    25
                ]
            }
        }
    ],
    "ignorePatterns": [
        "dist",
        "build",
        "node_modules",
        "coverage",
        "*.min.js",
        "public",
        ".eslintrc.js"
    ]
}